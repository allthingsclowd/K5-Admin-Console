{"version":3,"sources":["/home/grazzer/Dev/Repositories/K5AdminPortal/src async","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/app.component.css","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/app.component.html","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/app.component.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/app.module.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/cloudvisualised.component.css","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/cloudvisualised.component.html","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/cloudvisualised.component.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/ipsecvpn.component.css","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/ipsecvpn.component.html","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/ipsecvpn.component.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/loadbalancer.component.css","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/loadbalancer.component.html","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/loadbalancer.component.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/login.component.css","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/login.component.html","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/login.component.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/logout.component.css","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/logout.component.html","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/logout.component.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/model/user.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/network.component.css","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/network.component.html","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/network.component.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/project-panel.component.css","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/project-panel.component.html","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/project-panel.component.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/project.component.css","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/project.component.html","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/project.component.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/router.component.css","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/router.component.html","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/router.component.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/server.component.css","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/server.component.html","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/server.component.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/cloudvisualised.service.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/compute.service.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/convert-group-idto-name.pipe.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/convert-project-idto-name.pipe.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/convert-role-idto-name.pipe.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/convert-subset2-array.pipe.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/convert-user-idto-name.pipe.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/display-object.pipe.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/identity.service.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/ipsecvpn.service.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/loadbalancer.service.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/network.service.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/password-management.service.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/remove-quotes.pipe.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/sort-objects-by-name.pipe.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/stack-sorter.pipe.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/stack.service.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/user-maintenance.service.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/utility.service.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/user-management.component.css","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/user-management.component.html","/home/grazzer/Dev/Repositories/K5AdminPortal/src/app/user-management.component.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/environments/environment.ts","/home/grazzer/Dev/Repositories/K5AdminPortal/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container-fluid {\\n  margin-top: 30px;\\n}\\n\\ninput.ng-invalid.ng-touched {\\n  border: 1px solid red;\\n}\\n\\n.form-control.ng-invalid.ng-touched {\\n  border: 1px solid red;\\n}\\n\\n.form-control {\\n  overflow-y: auto;\\n}\\n\\n\\n.brand {\\n    position: relative;\\n    left: 50%;\\n    margin-left: -50px !important;  /* 50% of your logo width */\\n    display: block; \\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"    <div class=\\\"container-fluid\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t<img alt=\\\"Fujitsu K5 Logo\\\" src=\\\"https://www.fujitsu.com/uk/Images/K5-climber-580x224_tcm23-2619235.jpg\\\" class=\\\"img-responsive center-block img-rounded\\\">\\n\\t\\t</div>\\n\\t</div>\\n    <div class=\\\"container-fluid\\\">\\n\\t\\t<app-login *ngIf=\\\"!loggedIn\\\"></app-login>\\n\\t\\t<div>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-12 text-center\\\">\\n\\t\\t\\t\\t\\t\\t<!-- <app-logout *ngIf=\\\"loggedIn\\\"></app-logout> -->\\n\\t\\t\\t\\t\\t\\t<app-project *ngIf=\\\"loggedIn && userProjects\\\" ></app-project>\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<app-project-panel *ngIf=\\\"loggedIn && contractProjects\\\"></app-project-panel>\\n\\t</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { ComputeService } from './services/compute.service';\nimport { projects, project } from './model/user';\nimport { IdentityService } from './services/identity.service';\nimport { PasswordManagementService } from './services/password-management.service';\nimport { Component, OnInit, OnChanges } from '@angular/core';\n// import { FormControl, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  loggedIn: boolean = false;\n  userProjects: project[] = null;\n  currentProject: project = null;\n  contractProjects: any = null;\n\n\n  constructor(private identityService: IdentityService) {}\n\n\n  ngOnInit() {\n    this.identityService.loggedIn.subscribe(status => this.loggedIn = status);\n    this.identityService.userProjects.subscribe(currentProjects => this.userProjects = currentProjects);\n    this.identityService.currentProject.subscribe(selectedProject => this.currentProject = selectedProject);\n    this.identityService.contractProjects.subscribe(projects => this.contractProjects = projects);\n\n  }\n\n\n  \n \n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/app.component.ts","import { IpsecvpnService } from './services/ipsecvpn.service';\nimport { CloudvisualisedService } from './services/cloudvisualised.service';\nimport { NetworkService } from './services/network.service';\nimport { PasswordManagementService } from './services/password-management.service';\nimport { ComputeService } from './services/compute.service';\nimport { IdentityService } from './services/identity.service';\nimport { UtilityService } from './services/utility.service';\nimport { StackService } from './services/stack.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { SortObjectsByNamePipe } from './services/sort-objects-by-name.pipe';\nimport { LoginComponent } from './login.component';\nimport { ServerComponent } from './server.component';\nimport { NetworkComponent } from './network.component';\nimport { RouterComponent } from './router.component';\nimport { ProjectComponent } from './project.component';\nimport { DisplayObjectPipe } from './services/display-object.pipe';\nimport { ConvertSubset2ArrayPipe } from './services/convert-subset2-array.pipe';\nimport { RemoveQuotesPipe } from './services/remove-quotes.pipe';\nimport { LogoutComponent } from './logout.component';\nimport { ProjectPanelComponent } from './project-panel.component';\nimport { StackSorterPipe } from './services/stack-sorter.pipe';\nimport { ConvertUserIDtoNamePipe } from './services/convert-user-idto-name.pipe';\nimport { ConvertRoleIDtoNamePipe } from './services/convert-role-idto-name.pipe';\nimport { ConvertGroupIDtoNamePipe } from './services/convert-group-idto-name.pipe';\nimport { ConvertProjectIDtoNamePipe } from './services/convert-project-idto-name.pipe';\nimport { UserManagementComponent } from './user-management.component';\nimport { UserMaintenanceService } from './services/user-maintenance.service';\nimport { LoadbalancerComponent } from './loadbalancer.component';\nimport { LoadbalancerService } from './services/loadbalancer.service';\nimport { CloudvisualisedComponent } from './cloudvisualised.component';\nimport { IpsecvpnComponent } from './ipsecvpn.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SortObjectsByNamePipe,\n    LoginComponent,\n    ServerComponent,\n    NetworkComponent,\n    RouterComponent,\n    ProjectComponent,\n    DisplayObjectPipe,\n    ConvertSubset2ArrayPipe,\n    RemoveQuotesPipe,\n    LogoutComponent,\n    ProjectPanelComponent,\n    StackSorterPipe,\n    ConvertUserIDtoNamePipe,\n    ConvertRoleIDtoNamePipe,\n    ConvertGroupIDtoNamePipe,\n    ConvertProjectIDtoNamePipe,\n    UserManagementComponent,\n    LoadbalancerComponent,\n    CloudvisualisedComponent,\n    IpsecvpnComponent,\n    ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpModule\n  ],\n  providers: [IdentityService,\n              UtilityService,\n              StackService,\n              ComputeService,\n              PasswordManagementService,\n              UserMaintenanceService,\n              LoadbalancerService,\n              NetworkService,\n              CloudvisualisedService,\n              IpsecvpnService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/app.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Styles go here */\\n\\n/* Styles go here */\\n\\n.links line {\\n    stroke: #999;\\n    stroke-opacity: 0.6;\\n  }\\n  \\n  .nodes circle {\\n    stroke: #fff;\\n    stroke-width: 1.5px;\\n  }\\n\\n#cloudData {\\n  margin-left:auto;\\n  margin-right:auto; \\n  display:block;\\n  /* border: 2px solid red; */\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/cloudvisualised.component.css\n// module id = ../../../../../src/app/cloudvisualised.component.css\n// module chunks = 1","module.exports = \"<div >\\n    <svg id=\\\"cloudData\\\" width=\\\"80%\\\" height=\\\"600\\\"></svg>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/cloudvisualised.component.html\n// module id = ../../../../../src/app/cloudvisualised.component.html\n// module chunks = 1","import { CloudvisualisedService } from './services/cloudvisualised.service';\nimport { Component, OnInit, ViewChild, ElementRef, ViewEncapsulation, OnChanges, AfterViewInit, OnDestroy } from '@angular/core';\nimport * as d3Selection from 'd3-selection';\nimport * as d3Force from 'd3-force';\nimport * as d3Scale from 'd3-scale';\nimport * as d3Drag from 'd3-drag';\nimport * as d3Color from 'd3-color';\n\n@Component({\n  selector: 'app-cloudvisualised',\n  templateUrl: './cloudvisualised.component.html',\n  styleUrls: ['./cloudvisualised.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CloudvisualisedComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy  {\n  // @ViewChild('chart') private chartContainer: ElementRef;\n  svg: any;\n  link: any;\n  node: any;\n  color: any;\n  simulation: any;\n  nodeDetails: any;\n  chartTester: any;\n  height: any;\n  width: any;\n  radius: any;\n\n   constructor( private cloudvisualisedService: CloudvisualisedService ) {\n                  this.cloudvisualisedService.currentVisualData.subscribe(newData => this.nodeDetails = newData);\n                }\n\n  ngOnInit() {\n\n  }\n\n  ngAfterViewInit() {\n    //console.log('START OF CREATECHART IN CHART');\n    this.svg = d3Selection.select('svg');\n      \n    this.width = +this.svg.attr('width');\n    this.height = +this.svg.attr('height');\n    this.radius = 5;\n    console.log('Height & Width');\n    console.log(this.height);\n    console.log(this.width);\n\n    // Original data\n    const dataset = this.nodeDetails;\n\n    // Initialize a simple force layout, using the nodes and edges in dataset\n    this.color = d3Scale.scaleOrdinal(d3Scale.schemeCategory10);\n\n    const networkCenter = d3Force.forceCenter().x(250).y(250);\n\n    const modulePosition = {\n      \"2\": {x: 0, y: 0},\n      \"3\": {x: 250, y: 25},\n      \"1\": {x: 0, y: 250}\n    };\n\n    //Make the x-position equal to the x-position specified in the module positioning object or, if not in\n    //the hash, then set it to 250\n    let forceX = d3Force.forceX(function (d) {return modulePosition[d.module] ? modulePosition[d.module].x : 250})\n    .strength(0.05);\n\n    //Same for forceY--these act as a gravity parameter so the different strength determines how closely\n    //the individual nodes are pulled to the center of their module position\n    let forceY = d3Force.forceY(function (d) {return modulePosition[d.module] ? modulePosition[d.module].y : 250})\n    .strength(0.05);\n\n\n    this.simulation = d3Force.forceSimulation()\n        .force('link', d3Force.forceLink().id(function(d) { return d.index; }))\n        .force('charge', d3Force.forceManyBody().strength(-150).distanceMax(100))\n        .force('center', networkCenter)\n        .force(\"x\", forceX)\n        .force(\"y\", forceY);\n\n    // this.render(this.testdata);\n    //console.log('Bananas');\n    //console.log(this.testdata);\n    //console.log(this.cloudvisualisedService.convertToD3(this.nodeDetails));\n    this.render(this.nodeDetails);\n  }\n\n  ticked() {\n    \n    this.link\n    .attr('x1', function(d) { return d.source.x; })\n    .attr('y1', function(d) { return d.source.y; })\n    .attr('x2', function(d) { return d.target.x; })\n    .attr('y2', function(d) { return d.target.y; });\n    //console.log(this.link);\n\n    this.node\n      .attr(\"transform\", function (d) {return \"translate(\" + d.x + \",\" + d.y + \")\"});\n    //console.log(this.node);\n\n  }\n\n  ngOnDestroy() {\n  }\n\n  ngOnChanges() {\n\n  }\n\n  render(graph) {\n    console.log('HELEN');\n    console.log(graph.nodes);\n    console.log(graph.links);\n\n    this.link = this.svg.append('g')\n    .attr('class', 'links')\n    .selectAll('line')\n    .data(graph.links)\n    .enter().append('line')\n      .attr('stroke-width', function(d) { return Math.sqrt(d.weight); });\n\n    this.node = this.svg.append(\"g\")\n      .attr(\"class\", \"nodes\")\n      .selectAll(\"text\")\n      .data(graph.nodes)\n      .enter().append(\"text\")\n      .text(function(d) {\n        console.log(d.type);\n        switch(d.type) {\n          case 'network': {\n             return '\\uf0c2';\n          }\n          case 'port: network': {\n            return '\\uf0a9';\n         }\n          case 'subnetwork': {\n            return '\\uf18e';\n          }\n          case 'router': {\n            return '\\uf25d';\n          }\n          case 'port: compute': {\n            return '\\uf108';\n          }\n          case 'port: dhcp': {\n            return '\\uf0cb';\n          }\n          case 'lbaas': {\n            return '\\uf24e';\n          }\n          default: {\n             return '\\uf188';\n          }\n       }\n        })\n      .attr(\"x\", -8)\n      .attr(\"y\", 0)\n      .attr(\"width\", 16)\n      .attr(\"height\", 16)\n      .attr('font-family', 'FontAwesome')\n      .attr('font-size', function(d) { return d.weight+'em'} )\n      .style(\"fill\", (d)=> this.color(d.type))\n        .call(d3Drag.drag()\n            .on(\"start\", (d)=>{return this.dragstarted(d)})\n            .on(\"drag\", (d)=>{return this.dragged(d)})\n            .on(\"end\", (d)=>{return this.dragended(d)}));\n\n    this.node.append(\"title\")\n      .text(function (d) {return d.name});\n\n\n    // this.node.append(\"title\")\n    //   .style(\"text-anchor\", \"middle\")\n    //   .attr(\"y\", 3)\n    //   .style(\"font-size\", \"8px\")\n    //   .text(function (d) {return d.name})\n    //   .style(\"pointer-events\", \"none\");\n\n    // this.node.append(\"title\")\n    // .attr(\"dx\", 12)\n    // .attr(\"dy\", \".35em\")\n    // .text(function(d) { return d.name });\n\n    this.simulation\n      .nodes(graph.nodes)\n      .on('tick', ()=>{return this.ticked()});\n\n    this.simulation.force('link')\n      .links(graph.links);\n  }\n\n  dragged(d) {\n    d.fx = d3Selection.event.x;\n    d.fy = d3Selection.event.y;\n  }\n\n  dragended(d) {\n    if (!d3Selection.event.active) { this.simulation.alphaTarget(0); }\n    d.fx = null;\n    d.fy = null;\n  }\n\n  dragstarted(d) {\n    if (!d3Selection.event.active) { this.simulation.alphaTarget(0.3).restart(); }\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/cloudvisualised.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".fix-panel {\\n    min-height: 200px;\\n    max-height: 200px;\\n    overflow-y: scroll;\\n    overflow-x: scroll;\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/ipsecvpn.component.css\n// module id = ../../../../../src/app/ipsecvpn.component.css\n// module chunks = 1","module.exports = \"<div *ngIf='vpnServices && ipsecConnections && ipsecPolicies && ikePolicies' class=\\\"container-fluid\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-info\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tVPN Services\\n\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"fix-panel panel-body\\\">\\n\\t\\t\\t\\t\\t<div *ngFor='let service of vpnServices.vpnservices'>\\n            <li    value=\\\"service | json | removeQuotes\\\"\\n                    (click)=\\\"vpnChange(service)\\\">{{service.name | json | removeQuotes}}</li>\\n          </div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"panel-footer\\\">\\n\\t\\t\\t\\t\\tTotal {{ vpnServices.vpnservices.length }}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-info\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tVPN Service Detail\\n\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"fix-panel panel-body\\\">\\n\\t\\t\\t\\t\\t{{vpnService | json | removeQuotes }}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-warning\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tVPN Service Update/Delete\\n\\t\\t\\t\\t\\t</h3>\\n        </div>\\n        <form [formGroup]=\\\"amendVpnServiceForm\\\" #amendVPNService=\\\"ngForm\\\" >\\n          <div class=\\\"form-group panel-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"name\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t formControlName=\\\"name\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\">Description</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"description\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"description\\\">\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"adminState\\\">Admin State</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"adminState\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"adminState\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of adminState\\\" [value]=\\\"state\\\">{{state}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n          </div>\\n          <div class=\\\"panel-footer\\\">\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info btn-lg btn-block\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"amendVpnServiceForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"updateVpnService(vpnService)\\\">\\n              Update\\n            </button> \\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger btn-lg btn-block\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"amendVpnServiceForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deleteVpnService()\\\">\\n              Delete\\n            </button>\\n          </div>\\n        </form>\\n\\t\\t\\t</div> \\n\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-success\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tAdd New VPN Service\\n\\t\\t\\t\\t\\t</h3>\\n        </div>\\n        <form [formGroup]=\\\"addVpnServiceForm\\\" #addVPNService=\\\"ngForm\\\">\\n          <div class=\\\"form-group panel-body\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name</label>\\n\\t\\t\\t\\t\\t\\t<input id=\\\"name\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t formControlName=\\\"name\\\" required >\\n\\n\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\">Description</label>\\n\\t\\t\\t\\t\\t\\t<input id=\\\"description\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"description\\\">\\n\\n\\t\\t\\t\\t\\t\\t<label for=\\\"subnet\\\">Subnet Id</label>\\n\\t\\t\\t\\t\\t\\t<select id=\\\"subnet_id\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"subnet_id\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let subnet of subnets\\\" [value]=\\\"subnet.id\\\">{{subnet.name}}</option>\\n\\t\\t\\t\\t\\t\\t</select>\\n\\n\\t\\t\\t\\t\\t\\t<label for=\\\"router\\\">Router Id</label>\\n\\t\\t\\t\\t\\t\\t<select id=\\\"router_id\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"router_id\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let router of routers\\\" [value]=\\\"router.id\\\">{{router.name}}</option>\\n\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<label for=\\\"availabilityZone\\\">Availability Zone</label>\\n\\t\\t\\t\\t\\t\\t<select id=\\\"availabilityZone\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"availability_zone\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let az of azones\\\" [value]=\\\"az\\\">{{az}}</option>\\n\\t\\t\\t\\t\\t\\t</select>\\n\\n          </div>\\n          <div class=\\\"panel-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg btn-block\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"addVpnServiceForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"addVpnService()\\\">\\n              Add\\n            </button>\\n          </div>\\n        </form>\\n\\t\\t\\t</div> \\n\\n\\t\\t</div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-info\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tIPSec Policies\\n\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"fix-panel panel-body\\\">\\n          <div *ngFor='let policy of ipsecPolicies.ipsecpolicies'>\\n            <li    value=\\\"policy | json | removeQuotes\\\"\\n                    (click)=\\\"ipsecPolicyChange(policy)\\\">{{policy.name | json | removeQuotes}}</li>\\n          </div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"panel-footer\\\">\\n\\t\\t\\t\\t\\tTotal {{ ipsecPolicies.ipsecpolicies.length }}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-info\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tIPSec Policy Detail\\n\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"fix-panel panel-body\\\">\\n\\t\\t\\t\\t\\t{{ ipsecPolicy | json | removeQuotes }}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<!-- <div class=\\\"panel-footer\\\">\\n\\t\\t\\t\\t\\tPanel footer\\n\\t\\t\\t\\t</div> -->\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-warning\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tIPSec Policy Update/Delete\\n\\t\\t\\t\\t\\t</h3>\\n        </div>\\n        <form [formGroup]=\\\"amendIpsecPolicyForm\\\" #amendPolicyForm=\\\"ngForm\\\">\\n          <div class=\\\"panel-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"name\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t formControlName=\\\"name\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\">Description</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"description\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"description\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"encryption_algorithm\\\">Encryption Algorithm</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"encryption_algorithm\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"encryption_algorithm\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let proto of encryption_algorithm\\\" [value]=\\\"proto\\\">{{proto}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"pfs\\\">Perfect Forward Secrecy</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"pfs\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"pfs\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let group of pfs\\\" [value]=\\\"group\\\">{{group}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"lifetime\\\">Lifetime of the SA</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"lifetime\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"ipsecLtValue\\\" required >\\n\\t\\t\\t\\t\\t\\t\\n          </div>\\n          <div class=\\\"panel-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-info btn-lg btn-block\\\" \\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"amendIpsecPolicyForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\\"updateIpsecPolicy()\\\">\\n              Update\\n            </button> \\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-lg btn-block\\\" \\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"amendIpsecPolicyForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\\"deleteIpsecPolicy()\\\">\\n              Delete\\n            </button>\\n          </div>\\n        </form>\\n\\t\\t\\t</div> \\n\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-success\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tAdd New IPSec Policy\\n\\t\\t\\t\\t\\t</h3>\\n        </div>\\n        <form [formGroup]=\\\"addIpsecPolicyForm\\\" #addPolicyForm=\\\"ngForm\\\">\\n          <div class=\\\"form-group panel-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"name\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t formControlName=\\\"name\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\">Description</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"description\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"description\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"transform_protocol\\\">Transform Protocol</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"transform_protocol\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"transform_protocol\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let protocol of transform_protocol\\\" [value]=\\\"protocol\\\">{{protocol}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"auth_algorithm\\\">Authentication Algorithm</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"auth_algorithm\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"auth_algorithm\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let alg of auth_algorithm\\\" [value]=\\\"alg\\\">{{alg}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"encapsulation_mode\\\">Encapsulation Mode</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"encapsulation_mode\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"encapsulation_mode\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let mode of encapsulation_mode\\\" [value]=\\\"mode\\\">{{mode}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"encryption_algorithm\\\">Encryption Algorithm</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"encryption_algorithm\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"encryption_algorithm\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let proto of encryption_algorithm\\\" [value]=\\\"proto\\\">{{proto}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"pfs\\\">Perfect Forward Secrecy</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"pfs\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"pfs\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let group of pfs\\\" [value]=\\\"group\\\">{{group}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"lifetime\\\">Lifetime of the SA</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"lifetime\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"ipsecLtValue\\\" required >\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"availabilityZone\\\">Availability Zone</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"availabilityZone\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"availability_zone\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let az of azones\\\" [value]=\\\"az\\\">{{az}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n          </div>\\n          <div class=\\\"panel-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg btn-block\\\" \\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"addIpsecPolicyForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\\"addIpsecPolicy()\\\">\\n              Add\\n            </button>\\n          </div>\\n        </form>  \\n\\t\\t\\t</div> \\n\\n\\t\\t</div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-info\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tIKE Policies\\n\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"fix-panel panel-body\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngFor='let policy of ikePolicies.ikepolicies'>\\n\\t\\t\\t\\t\\t\\t\\t\\t<li    value=\\\"policy | json | removeQuotes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"ikePolicyChange(policy)\\\">{{policy.name | json | removeQuotes}}</li>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"panel-footer\\\">\\n\\t\\t\\t\\t\\t\\tTotal {{ ikePolicies.ikepolicies.length }}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-info\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tIKE Policy\\n\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"fix-panel panel-body\\\">\\n\\t\\t\\t\\t\\t\\t{{ ikePolicy | json | removeQuotes }}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<!-- <div class=\\\"panel-footer\\\">\\n\\t\\t\\t\\t\\tPanel footer\\n\\t\\t\\t\\t</div> -->\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-warning\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tIKE Policy Update/Delete\\n\\t\\t\\t\\t\\t</h3>\\n        </div>\\n        <form [formGroup]=\\\"amendIkePolicyForm\\\" >\\n          <div class=\\\"panel-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"name\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t formControlName=\\\"name\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\">Description</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"description\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"description\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"encryption_algorithm\\\">Encryption Algorithm</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"encryption_algorithm\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"encryption_algorithm\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let proto of encryption_algorithm\\\" [value]=\\\"proto\\\">{{proto}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"pfs\\\">Perfect Forward Secrecy</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"pfs\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"pfs\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let group of pfs\\\" [value]=\\\"group\\\">{{group}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"lifetime\\\">Lifetime of the SA</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"lifetime\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"ikeLtValue\\\" required >\\n\\n          </div>\\n          <div class=\\\"panel-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-info btn-lg btn-block\\\" \\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"amendIkePolicyForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\\"updateIkePolicy()\\\">\\n              Update\\n            </button> \\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-lg btn-block\\\" \\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"amendIkePolicyForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\\"deleteIkePolicy()\\\">\\n              Delete\\n            </button>\\n          </div>\\n        </form>\\n\\t\\t\\t</div> \\n\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-success\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tAdd New IKE Policy\\n\\t\\t\\t\\t\\t</h3>\\n        </div>\\n        <form [formGroup]=\\\"addIkePolicyForm\\\" >\\n          <div class=\\\"form-group panel-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"name\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t formControlName=\\\"name\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\">Description</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"description\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"description\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"phase1_negotiation_mode\\\">Phase 1 Negotiation Mode</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"phase1_negotiation_mode\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"phase1_negotiation_mode\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let mode of phase1_negotiation_mode\\\" [value]=\\\"mode\\\">{{mode}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"auth_algorithm\\\">Authentication Algorithm</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"auth_algorithm\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"auth_algorithm\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let alg of auth_algorithm\\\" [value]=\\\"alg\\\">{{alg}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"encryption_algorithm\\\">Encryption Algorithm</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"encryption_algorithm\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"encryption_algorithm\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let proto of encryption_algorithm\\\" [value]=\\\"proto\\\">{{proto}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"pfs\\\">Perfect Forward Secrecy</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"pfs\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"pfs\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let group of pfs\\\" [value]=\\\"group\\\">{{group}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"lifetime\\\">Lifetime of the SA</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"lifetime\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"ikeLtValue\\\" required >\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"ike_version\\\">IKE Version</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"ike_version\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"ike_version\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let ver of ike_version\\\" [value]=\\\"ver\\\">{{ver}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"availabilityZone\\\">Availability Zone</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"availabilityZone\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"availability_zone\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let az of azones\\\" [value]=\\\"az\\\">{{az}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n          </div>\\n          <div class=\\\"panel-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg btn-block\\\" \\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"addIkePolicyForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\\"addIkePolicy()\\\">\\n              Add\\n            </button>\\n          </div>\\n        </form>\\n\\t\\t\\t</div> \\n\\n\\t\\t</div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-info\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tSite Connections\\n\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"fix-panel panel-body\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngFor='let connection of ipsecConnections.ipsec_site_connections'>\\n\\t\\t\\t\\t\\t\\t\\t\\t<li    value=\\\"connection | json | removeQuotes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"connectionChange(connection)\\\">{{connection.name | json | removeQuotes}}</li>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"panel-footer\\\">\\n\\t\\t\\t\\t\\tTotal {{ ipsecConnections.ipsec_site_connections.length }}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-info\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tSite Connection\\n\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"fix-panel panel-body\\\">\\n\\t\\t\\t\\t\\t\\t{{ ipsecConnection | json | removeQuotes }}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-warning\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tSite Connection Update/Delete\\n\\t\\t\\t\\t\\t</h3>\\n        </div>\\n        <form [formGroup]=\\\"amendConnectionForm\\\" >\\n          <div class=\\\"panel-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"name\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t formControlName=\\\"name\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\">Description</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"description\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"description\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"psk\\\">Pre-Shared Key</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"psk\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"password\\\" formControlName=\\\"psk\\\" required >\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"initiator\\\">Initiator Type</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"initiator\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"initiator\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let direction of initiator\\\" [value]=\\\"direction\\\">{{direction}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"peer_cidrs\\\">Peer CIDR [Note: One Only Supported]</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"peer_cidrs\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"peer_cidrs\\\" required >\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"peer_address\\\">Peer Gateway IP Address</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"peer_address\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"peer_address\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"peer_id\\\">Peer Router Id [Label - Use Peer Gateway]</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"peer_id\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"peer_id\\\" required >\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"dpd_protocol\\\">Dead Peer Detection Protocol</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"dpd_protocol\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"dpd_protocol\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let protocol of dpdProtocol\\\" [value]=\\\"protocol\\\">{{protocol}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"dpd_interval\\\">Dead Peer Detection Interval</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"dpd_interval\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"dpd_interval\\\" required >\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"dpd_timeout\\\">Dead Peer Detection Timeout</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"dpd_timeout\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"dpd_timeout\\\" required >\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"admin_state_up\\\">Admin State Up</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"admin_state_up\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"admin_state_up\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of adminState\\\" [value]=\\\"state\\\">{{state}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n          </div>\\n          <div class=\\\"panel-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-info btn-lg btn-block\\\" \\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"amendConnectionForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\\"updateSiteConnection()\\\">\\n              Update\\n            </button> \\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-lg btn-block\\\" \\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"amendConnectionForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\\"deleteSiteConnection()\\\">\\n              Delete\\n            </button>\\n          </div>\\n        </form>\\n\\t\\t\\t</div> \\n\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"panel panel-success\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"panel-title\\\">\\n\\t\\t\\t\\t\\t\\tAdd New Site Connection\\n\\t\\t\\t\\t\\t</h3>\\n        \\t\\t</div>\\n        \\t\\t<form [formGroup]=\\\"addConnectionForm\\\" >\\n          \\t\\t\\t<div class=\\\"form-group panel-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"name\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t formControlName=\\\"name\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\">Description</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"description\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"description\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"psk\\\">Pre-Shared Key</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"psk\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"password\\\" formControlName=\\\"psk\\\" required >\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"initiator\\\">Initiator Type</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"initiator\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"initiator\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let direction of initiator\\\" [value]=\\\"direction\\\">{{direction}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"ikepolicy_id\\\">IKE Policy - Phase 1</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"ikepolicy_id\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"ikepolicy_id\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let ikpolicy of ikePolicies.ikepolicies\\\" [value]=\\\"ikpolicy.id\\\">{{ikpolicy.name}} ({{ikpolicy.id}})</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"ipsecpolicy_id\\\">IPSec Policy - Phase 2</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"ipsecpolicy_id\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"ipsecpolicy_id\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let secpolicy of ipsecPolicies.ipsecpolicies\\\" [value]=\\\"secpolicy.id\\\">{{secpolicy.name}}  ({{secpolicy.id}})</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"vpnservice_id\\\">VPN Service</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"vpnservice_id\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"vpnservice_id\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let service of vpnServices.vpnservices\\\" [value]=\\\"service.id\\\">{{service.name}} ({{service.id}})</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"peer_cidrs\\\">Peer CIDR [Note: One Only Supported]</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"peer_cidrs\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"peer_cidrs\\\" required >\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"peer_address\\\">Peer Gateway IP Address</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"peer_address\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"peer_address\\\" required >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"peer_id\\\">Peer Router Id [Label - Use Peer Gateway]</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"peer_id\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"peer_id\\\" required >\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"dpd_protocol\\\">Dead Peer Detection Protocol</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"dpd_protocol\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"dpd_protocol\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let protocol of dpdProtocol\\\" [value]=\\\"protocol\\\">{{protocol}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"dpd_interval\\\">Dead Peer Detection Interval</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"dpd_interval\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"dpd_interval\\\" required >\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"dpd_timeout\\\">Dead Peer Detection Timeout</label>\\n\\t\\t\\t\\t\\t\\t\\t<input id=\\\"dpd_timeout\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"dpd_timeout\\\" required >\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"admin_state_up\\\">Admin State Up</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"admin_state_up\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"admin_state_up\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of adminState\\\" [value]=\\\"state\\\">{{state}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"availabilityZone\\\">Availability Zone</label>\\n\\t\\t\\t\\t\\t\\t\\t<select id=\\\"availabilityZone\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"availability_zone\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let az of azones\\\" [value]=\\\"az\\\">{{az}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n          \\t\\t</div>\\n          \\t\\t<div class=\\\"panel-footer\\\">\\n            \\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success btn-lg btn-block\\\" \\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"addConnectionForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\\"addSiteConnection()\\\">\\n              \\t\\t\\tAdd\\n            \\t\\t</button>\\n          \\t\\t</div>\\n        \\t</form>\\n\\t\\t\\t</div> \\n\\n\\t\\t</div>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/ipsecvpn.component.html\n// module id = ../../../../../src/app/ipsecvpn.component.html\n// module chunks = 1","import { NetworkService } from './services/network.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IdentityService } from './services/identity.service';\nimport { Component, OnInit } from '@angular/core';\nimport { IpsecvpnService } from './services/ipsecvpn.service';\n\n@Component({\n  selector: 'app-ipsecvpn',\n  templateUrl: './ipsecvpn.component.html',\n  styleUrls: ['./ipsecvpn.component.css']\n})\nexport class IpsecvpnComponent implements OnInit {\n  vpnServices: any;\n  vpnService: any;\n  ipsecPolicies: any;\n  ipsecPolicy: any;\n  ikePolicies: any;\n  ikePolicy: any;\n  ipsecConnections: any;\n  ipsecConnection: any;\n  currentProjectT: any;\n  azones: any;\n  subnets: any;\n  routers: any;\n  amendVpnServiceForm: FormGroup;\n  addVpnServiceForm: FormGroup;\n  amendIpsecPolicyForm: FormGroup;\n  addIpsecPolicyForm: FormGroup;\n  amendIkePolicyForm: FormGroup;\n  addIkePolicyForm: FormGroup;\n  amendConnectionForm: FormGroup;\n  addConnectionForm: FormGroup;\n\n  // api parameters\n  defaultName = 'Enter resource name';\n  defaultDescription = 'Enter resource description';\n  auth_algorithm = ['sha1'];\n  encryption_algorithm = ['aes-128', 'aes-256', 'aes-192'];\n  pfs = ['group2', 'group5', 'group14'];\n  phase1_negotiation_mode = ['main'];\n  ike_version = ['v1'];\n  transform_protocol = ['esp'];\n  encapsulation_mode = ['tunnel'];\n  initiator = ['bi-directional', 'response-only'];\n  dpdProtocol = ['hold', 'restart'];\n  adminState = [true, false];\n\n\n\n\n\n  constructor(private ipsecvpnService: IpsecvpnService,\n              private identityService: IdentityService,\n              private networkService: NetworkService) {\n\n    this.ipsecvpnService.ipsecPolicies.subscribe(policies => this.ipsecPolicies = policies);\n    this.ipsecvpnService.ipsecPolicy.subscribe(policy => this.ipsecPolicy = policy);\n    this.ipsecvpnService.ikePolicies.subscribe(policies => this.ikePolicies = policies);\n    this.ipsecvpnService.ikePolicy.subscribe(policy => this.ikePolicy = policy);\n    this.ipsecvpnService.vpnServices.subscribe(services => this.vpnServices = services);\n    this.ipsecvpnService.vpnService.subscribe(service => this.vpnService = service);\n    this.ipsecvpnService.ipsecConnections.subscribe(connections => this.ipsecConnections = connections);\n    this.ipsecvpnService.ipsecConnection.subscribe(connection => this.ipsecConnection = connection);\n    this.identityService.userPToken.subscribe(currentProjectToken => this.currentProjectT = currentProjectToken);\n    this.identityService.availabilityZones.subscribe(azList => this.azones = azList);\n    this.networkService.userRouters.subscribe(projectRouters => this.routers = projectRouters);\n    this.networkService.userSubNetworks.subscribe(projectSubnets => this.subnets = projectSubnets);\n\n  }\n\n  ngOnInit() {\n\n    this.amendVpnServiceForm = new FormGroup({\n      'name': new FormControl(null),\n      'adminState': new FormControl(null),\n      'description': new FormControl(null)\n      });\n\n    this.addVpnServiceForm = new FormGroup({\n      'name': new FormControl(this.defaultName, [Validators.required]),\n      'description': new FormControl(this.defaultDescription, [Validators.required]),\n      'subnet_id': new FormControl('Select Subnet', [Validators.required]),\n      'router_id': new FormControl('Select Router', [Validators.required]),\n      'availability_zone': new FormControl(this.azones[0], [Validators.required])\n      });\n\n    this.amendIpsecPolicyForm = new FormGroup({\n      'name': new FormControl(null),\n      'encryption_algorithm': new FormControl(null),\n      'pfs': new FormControl(null),\n      'ipsecLtValue': new FormControl(null),\n      'description': new FormControl(null)\n      });\n\n    this.addIpsecPolicyForm = new FormGroup({\n      'name': new FormControl(this.defaultName, [Validators.required]),\n      'description': new FormControl(this.defaultDescription, [Validators.required]),\n      'transform_protocol': new FormControl(this.transform_protocol[0], [Validators.required]),\n      'auth_algorithm': new FormControl(this.auth_algorithm[0], [Validators.required]),\n      'encapsulation_mode': new FormControl(this.encapsulation_mode[0], [Validators.required]),\n      'encryption_algorithm': new FormControl(this.encryption_algorithm[1], [Validators.required]),\n      'pfs': new FormControl(this.pfs[2], [Validators.required]),\n      'ipsecLtValue': new FormControl(7200, [Validators.required]),\n      'availability_zone': new FormControl(this.azones[0], [Validators.required])\n      });\n\n    this.amendIkePolicyForm = new FormGroup({\n      'encryption_algorithm': new FormControl(null),\n      'pfs': new FormControl(null),\n      'ikeLtValue': new FormControl(null),\n      'name': new FormControl(null),\n      'description': new FormControl(null)\n      });\n\n    this.addIkePolicyForm = new FormGroup({\n      'phase1_negotiation_mode': new FormControl(this.phase1_negotiation_mode[0], [Validators.required]),\n      'auth_algorithm': new FormControl(this.auth_algorithm[0], [Validators.required]),\n      'encryption_algorithm': new FormControl(this.encryption_algorithm[1], [Validators.required]),\n      'pfs': new FormControl(this.pfs[2], [Validators.required]),\n      'ikeLtValue': new FormControl(7200, [Validators.required]),\n      'ike_version': new FormControl(this.ike_version[0], [Validators.required]),\n      'name': new FormControl(this.defaultName, [Validators.required]),\n      'description': new FormControl(this.defaultName, [Validators.required]),\n      'availability_zone': new FormControl(this.azones[0], [Validators.required])\n      });\n\n    this.amendConnectionForm = new FormGroup({\n      'psk': new FormControl(null),\n      'peer_cidrs': new FormControl(null),\n      'peer_address': new FormControl(null),\n      'peer_id': new FormControl(null),\n      'name': new FormControl(null),\n      'description': new FormControl(null),\n      'initiator': new FormControl(null),\n      'dpd_protocol': new FormControl(null),\n      'dpd_interval': new FormControl(null),\n      'dpd_timeout': new FormControl(null),\n      'admin_state_up': new FormControl(null)\n      });\n\n    this.addConnectionForm = new FormGroup({\n      'psk': new FormControl(null, [Validators.required]),\n      'ipsecpolicy_id': new FormControl('Select IPSec Policy', [Validators.required]),\n      'peer_cidrs': new FormControl(null, [Validators.required]),\n      'initiator': new FormControl(this.initiator[0], [Validators.required]),\n      'ikepolicy_id': new FormControl('Select IKE Policy', [Validators.required]),\n      'vpnservice_id': new FormControl('Select VPN Service', [Validators.required]),\n      'peer_address': new FormControl('Enter remote ip address', [Validators.required]),\n      'peer_id': new FormControl('Enter any remote identifier', [Validators.required]),\n      'dpd_protocol': new FormControl(this.dpdProtocol[0], [Validators.required]),\n      'dpd_interval': new FormControl(30, [Validators.required]),\n      'dpd_timeout': new FormControl(120, [Validators.required]),\n      'admin_state_up': new FormControl(true, [Validators.required]),\n      'name': new FormControl(this.defaultName, [Validators.required]),\n      'description': new FormControl(this.defaultDescription, [Validators.required]),\n      'availability_zone': new FormControl(this.azones[0], [Validators.required])\n      });\n\n      \n  }\n\n  vpnChange(service) {\n    console.log(service);\n    this.ipsecvpnService.vpnServiceShow(this.currentProjectT, service.id);\n    this.amendVpnServiceForm.patchValue({name: service.name, description: service.description, adminState: service.admin_state_up});\n    this.ipsecvpnService.changeVpnService(service);\n  }\n\n  ipsecPolicyChange(policy) {\n    console.log(policy);\n    this.ipsecvpnService.ipsecPolicyShow(this.currentProjectT, policy.id);\n    this.amendIpsecPolicyForm.patchValue({name: policy.name,\n                                          description: policy.description,\n                                          encryption_algorithm: policy.encryption_algorithm,\n                                          pfs: policy.pfs,\n                                          ipsecLtValue: policy.lifetime.value\n                                           });\n    this.ipsecvpnService.changeIpsecPolicy(policy);\n  }\n\n  ikePolicyChange(policy) {\n    console.log(policy);\n    this.ipsecvpnService.ikePolicyShow(this.currentProjectT, policy.id);\n    this.amendIkePolicyForm.patchValue({name: policy.name,\n      description: policy.description,\n      encryption_algorithm: policy.encryption_algorithm,\n      pfs: policy.pfs,\n      ikeLtValue: policy.lifetime.value\n       });\n    this.ipsecvpnService.changeIkePolicy(policy);\n  }\n\n  connectionChange(connection) {\n    console.log(connection);\n    this.ipsecvpnService.ipsecSiteConnectionShow(this.currentProjectT, connection.id);\n    this.amendConnectionForm.patchValue({\n\n        name: connection.name,\n        description: connection.description,\n        psk: connection.psk,\n        initiator: connection.initiator,\n        peer_cidrs: connection.peer_cidrs,\n        peer_address: connection.peer_address,\n        peer_id: connection.peer_id,\n        dpd_protocol: connection.dpd.action,\n        dpd_interval: connection.dpd.interval,\n        dpd_timeout: connection.dpd.timeout,\n        admin_state_up: connection.admin_state_up\n\n\n    });\n    this.ipsecvpnService.changeIpsecConnection(connection);\n  }\n\n  addVpnService() {\n    this.ipsecvpnService.vpnServiceCreate(this.currentProjectT,\n                this.addVpnServiceForm.get('name').value,\n                this.addVpnServiceForm.get('description').value,\n                this.addVpnServiceForm.get('router_id').value,\n                this.addVpnServiceForm.get('subnet_id').value,\n                this.addVpnServiceForm.get('availability_zone').value\n              );\n    this.addVpnServiceForm.reset();\n\n  }\n\n  updateVpnService() {\n    console.log(this.vpnService);\n    this.ipsecvpnService.vpnServiceUpdate(this.currentProjectT,\n      this.vpnService.vpnservice.id,\n      this.amendVpnServiceForm.get('name').value,\n      this.amendVpnServiceForm.get('adminState').value,\n      this.amendVpnServiceForm.get('description').value\n\n    );\n    this.amendVpnServiceForm.reset();\n\n  }\n\n  deleteVpnService() {\n    this.ipsecvpnService.vpnServiceDelete(this.currentProjectT,\n                      this.vpnService.vpnservice.id);\n    this.amendVpnServiceForm.reset();\n\n  }\n\n  deleteIpsecPolicy() {\n    this.ipsecvpnService.ipsecPolicyDelete(this.currentProjectT,\n        this.ipsecPolicy.id);\n    this.amendIpsecPolicyForm.reset();\n\n  }\n\n  updateIpsecPolicy() {\n    console.log(this.ipsecPolicy);\n    this.ipsecvpnService.ipsecPolicyUpdate(this.currentProjectT,\n      this.ipsecPolicy.id,\n      this.amendIpsecPolicyForm.get('name').value,\n      this.amendIpsecPolicyForm.get('encryption_algorithm').value,\n      this.amendIpsecPolicyForm.get('pfs').value,\n      this.amendIpsecPolicyForm.get('ipsecLtValue').value,\n      this.amendIpsecPolicyForm.get('description').value,\n    );\n    this.amendIpsecPolicyForm.reset();\n\n  }\n\n  addIpsecPolicy() {\n    console.log(this.addIpsecPolicyForm);\n    this.ipsecvpnService.ipsecPolicyCreate(this.currentProjectT,\n      this.addIpsecPolicyForm.get('name').value,\n      this.addIpsecPolicyForm.get('description').value,\n      this.addIpsecPolicyForm.get('transform_protocol').value,\n      this.addIpsecPolicyForm.get('auth_algorithm').value,\n      this.addIpsecPolicyForm.get('encryption_algorithm').value,\n      this.addIpsecPolicyForm.get('encapsulation_mode').value,\n      this.addIpsecPolicyForm.get('pfs').value,\n      this.addIpsecPolicyForm.get('ipsecLtValue').value,\n      this.addIpsecPolicyForm.get('availability_zone').value\n    );\n    this.addIpsecPolicyForm.reset();\n\n  }\n\n  deleteIkePolicy() {\n    this.ipsecvpnService.ikePolicyDelete(this.currentProjectT,\n        this.ikePolicy.ikepolicy.id);\n    this.amendIkePolicyForm.reset();\n\n  }\n\n  updateIkePolicy() {\n    console.log(this.ikePolicy);\n    this.ipsecvpnService.ikePolicyUpdate(this.currentProjectT,\n      this.ikePolicy.ikepolicy.id,\n      this.amendIkePolicyForm.get('name').value,\n      this.amendIkePolicyForm.get('encryption_algorithm').value,\n      this.amendIkePolicyForm.get('ikeLtValue').value,\n      this.amendIkePolicyForm.get('pfs').value,\n      this.amendIkePolicyForm.get('description').value,\n    );\n    this.amendIkePolicyForm.reset();\n\n  }\n\n  addIkePolicy() {\n    console.log(this.addIkePolicyForm);\n    this.ipsecvpnService.ikePolicyCreate(this.currentProjectT,\n      this.addIkePolicyForm.get('name').value,\n      this.addIkePolicyForm.get('description').value,\n      this.addIkePolicyForm.get('auth_algorithm').value,\n      this.addIkePolicyForm.get('encryption_algorithm').value,\n      this.addIkePolicyForm.get('ikeLtValue').value,\n      this.addIkePolicyForm.get('ike_version').value,\n      this.addIkePolicyForm.get('pfs').value,\n      this.addIkePolicyForm.get('phase1_negotiation_mode').value,\n      this.addIkePolicyForm.get('availability_zone').value\n    );\n    this.addIkePolicyForm.reset();\n\n  }\n\n  deleteSiteConnection() {\n    this.ipsecvpnService.ipsecSiteConnectionDelete(this.currentProjectT,\n        this.ipsecConnection.id);\n    this.amendConnectionForm.reset();\n\n  }\n\n  updateSiteConnection() {\n    console.log(this.ipsecConnection);\n    console.log(this.amendConnectionForm);\n    this.ipsecvpnService.ipsecSiteConnectionUpdate(this.currentProjectT,\n      this.ipsecConnection.id,\n      this.amendConnectionForm.get('initiator').value,\n      this.amendConnectionForm.get('peer_id').value,\n      this.amendConnectionForm.get('peer_address').value,\n      this.amendConnectionForm.get('peer_cidrs').value,\n      this.amendConnectionForm.get('psk').value,\n      this.amendConnectionForm.get('name').value,\n      this.amendConnectionForm.get('description').value,\n      this.amendConnectionForm.get('admin_state_up').value,\n      this.amendConnectionForm.get('dpd_protocol').value,\n      this.amendConnectionForm.get('dpd_interval').value,\n      this.amendConnectionForm.get('dpd_timeout').value\n    );\n    this.amendConnectionForm.reset();\n\n  }\n\n  addSiteConnection() {\n    console.log(this.addConnectionForm);\n    this.ipsecvpnService.ipsecSiteConnectionCreate(this.currentProjectT,\n      this.addConnectionForm.get('name').value,\n      this.addConnectionForm.get('description').value,\n      this.addConnectionForm.get('initiator').value,\n      this.addConnectionForm.get('vpnservice_id').value,\n      this.addConnectionForm.get('ikepolicy_id').value,\n      this.addConnectionForm.get('ipsecpolicy_id').value,\n      this.addConnectionForm.get('peer_id').value,\n      this.addConnectionForm.get('peer_address').value,\n      this.addConnectionForm.get('peer_cidrs').value,\n      this.addConnectionForm.get('psk').value,\n      this.addConnectionForm.get('admin_state_up').value,\n      this.addConnectionForm.get('dpd_protocol').value,\n      this.addConnectionForm.get('dpd_interval').value,\n      this.addConnectionForm.get('dpd_timeout').value,\n      this.addConnectionForm.get('availability_zone').value\n    );\n    this.addConnectionForm.reset();\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/ipsecvpn.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/loadbalancer.component.css\n// module id = ../../../../../src/app/loadbalancer.component.css\n// module chunks = 1","module.exports = \"<div *ngIf='currentProjectT' class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div *ngIf='userLBaaS' class=\\\"col-md-6\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">\\n            Load Balancers \\n          </h3>\\n        </div>\\n        <div class=\\\"fixed-panel panel-body\\\">\\n          <div *ngFor='let lbaas of userLBaaS'>\\n            <li    value=\\\"lbaas | json | removeQuotes\\\"\\n                    (click)=\\\"LBaaSChange(lbaas)\\\">{{lbaas.LoadBalancerName | json | removeQuotes}}</li>\\n          </div>\\n        </div>\\n        <div class=\\\"panel-footer\\\">\\n\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf='userLBaaSDetails' class=\\\"col-md-6\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">\\n            Load Balancer {{userLBaaSDetails[0].LoadBalancerName | json | removeQuotes}}\\n          </h3>\\n        </div>\\n        <div class=\\\"fixed-panel panel-body\\\">\\n          <div>\\n            {{userLBaaSDetails[0]| json| removeQuotes}}\\n          </div>\\n        </div>\\n        <div class=\\\"panel-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-xl btn btn-danger\\\" (click)=\\\"onLBaaSDelete(userLBaaSDetails[0])\\\">Delete Load Balancer</button>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/loadbalancer.component.html\n// module id = ../../../../../src/app/loadbalancer.component.html\n// module chunks = 1","import { IdentityService } from './services/identity.service';\nimport { Component, OnInit } from '@angular/core';\nimport { LoadbalancerService } from './services/loadbalancer.service';\n\n@Component({\n  selector: 'app-loadbalancer',\n  templateUrl: './loadbalancer.component.html',\n  styleUrls: ['./loadbalancer.component.css']\n})\nexport class LoadbalancerComponent implements OnInit {\n\n  userLBaaS: any;\n  userLBaaSDetails: any;\n  currentProjectT: any = null;\n\n  constructor(  private loadBalancerService: LoadbalancerService,\n                private identityService: IdentityService ) { }\n\n  ngOnInit() {\n    this.loadBalancerService.userLBaaS.subscribe(lbaas => this.userLBaaS = lbaas);\n    this.loadBalancerService.LBaaSDetails.subscribe(lbaasdetail => this.userLBaaSDetails = lbaasdetail);\n    this.identityService.userPToken.subscribe(currentProjectToken => this.currentProjectT = currentProjectToken);\n  }\n\n  LBaaSChange(LBaaS) {\n    this.loadBalancerService.getLBaaSDetailOrList(this.currentProjectT, LBaaS.LoadBalancerName);\n    //console.log('Change LBaaS Detail => ');\n    //console.log(this.userLBaaSDetails);\n  }\n\n  onLBaaSDelete(LBaaS) {\n    //console.log('Deleting LBaaS => ');\n    //console.log(LBaaS);\n    this.loadBalancerService.deleteLBaaS(this.currentProjectT, LBaaS.LoadBalancerName);\n    this.loadBalancerService.changeLBaaSDetails(null);\n    this.loadBalancerService.getLBaaSDetailOrList(this.currentProjectT, 'all');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/loadbalancer.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".btn-xl {\\n    padding: 10px 20px;\\n    font-size: 20px;\\n    border-radius: 10px;\\n  }\\n\\n  .center {\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    margin: auto;  \\n  }\\n\\n  /* The switch - the box around the slider */\\n.switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 60px;\\n  height: 34px;\\n}\\n\\n/* Hide default HTML checkbox */\\n.switch input {display:none;}\\n\\n/* The slider */\\n.slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #ccc;\\n  transition: .4s;\\n}\\n\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 26px;\\n  width: 26px;\\n  left: 4px;\\n  bottom: 4px;\\n  background-color: white;\\n  transition: .4s;\\n}\\n\\ninput:checked + .slider {\\n  background-color: #2196F3;\\n}\\n\\ninput:focus + .slider {\\n  box-shadow: 0 0 1px #2196F3;\\n}\\n\\ninput:checked + .slider:before {\\n  -webkit-transform: translateX(26px);\\n  transform: translateX(26px);\\n}\\n\\n/* Rounded sliders */\\n.slider.round {\\n  border-radius: 34px;\\n}\\n\\n.slider.round:before {\\n  border-radius: 50%;\\n}\\n\\n.help-block {\\n  color: red;\\n  background-color: white;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/login.component.css\n// module id = ../../../../../src/app/login.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"center col-md-4\\\">\\n    <form [formGroup]=\\\"loginForm\\\" >\\n      <div formGroupName=\\\"loginData\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"k5contract\\\">\\n              Contract\\n            </label>\\n            <input \\n              type=\\\"text\\\" \\n              class=\\\"form-control\\\" \\n              id=\\\"k5contract\\\"\\n              formControlName=\\\"contract\\\">\\n            <span\\n              *ngIf=\\\"!loginForm.get('loginData.contract').valid && loginForm.get('loginData.contract').touched\\\"\\n              class=\\\"help-block\\\">Please enter a valid K5 contract name\\n            </span>\\n          </div>\\n        <div class=\\\"form-group\\\">\\t\\t\\t\\t\\t \\n          <label for=\\\"k5username\\\">\\n            User\\n          </label>\\n          <input \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\" \\n            id=\\\"k5username\\\"\\n            formControlName=\\\"user\\\">\\n          <span\\n            *ngIf=\\\"!loginForm.get('loginData.user').valid && loginForm.get('loginData.user').touched\\\"\\n            class=\\\"help-block\\\">Please enter a valid K5 username\\n          </span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"k5password\\\">\\n            Password\\n          </label>\\n          <input \\n            type=\\\"password\\\" \\n            class=\\\"form-control\\\" \\n            id=\\\"k5password\\\"\\n            formControlName=\\\"password\\\">\\n          <span\\n            *ngIf=\\\"!loginForm.get('loginData.password').valid && loginForm.get('loginData.password').touched\\\"\\n            class=\\\"help-block\\\">Please enter a valid K5 password\\n          </span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"k5region\\\">\\n            Region\\n          </label>\\n          <select\\n            id=\\\"region\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"region\\\"\\t\\t\\t\\t\\t\\t\\n            name=\\\"region\\\">\\n            <option [value]=\\\"null\\\">Choose a region</option>\\n            <option *ngFor=\\\"let region of regions\\\" [value]=\\\"region\\\">{{region}}</option>\\n            \\n          </select>\\n          <span\\n            *ngIf=\\\"!loginForm.get('loginData.region').valid && loginForm.get('loginData.region').touched\\\"\\n            class=\\\"help-block\\\">Please select a global region from the list\\n          </span>\\t\\n        </div>\\n        <!-- <div class=\\\"form-group\\\">  -->\\n            <!-- CORS Proxy Toggle -->\\n            <!-- <span\\n              *ngIf=\\\"!loginForm.get('loginData.k5cors').value\\\"\\n              class=\\\"help-block\\\">CORS Proxy Disabled\\n            </span> -->\\n\\n            <!-- <p *ngIf=\\\"loginForm.get('loginData.k5cors').value\\\">CORS Proxy Enabled</p>\\n            <p *ngIf=\\\"!loginForm.get('loginData.k5cors').value\\\">CORS Proxy Disabled</p> -->\\n            <!-- <label class=\\\"switch\\\">\\n              <input type=\\\"checkbox\\\"\\n              id=\\\"k5cors\\\"\\n              formControlName=\\\"k5cors\\\"\\n              (change)=\\\"toggleK5Proxy()\\\">\\n              <span class=\\\"slider round\\\"></span>\\n              \\n            </label>\\n            \\n          </div> -->\\n\\n      </div>\\n      <div class=\\\"form-group\\\" *ngIf=\\\"!loggedIn\\\">\\n        <button type=\\\"button\\\" class=\\\"pull-right btn-xl btn btn-success btn-large\\\" [disabled]=\\\"!loginForm.get('loginData').valid\\\" (click)=\\\"onLogin()\\\">\\n          Login\\n        </button>\\n        <span\\n          *ngIf=\\\"failedLogIn\\\"\\n          class=\\\"help-block error\\\">Login Failure - Please check your K5 details and try again.\\n        </span>\\t\\t\\t\\t\\t\\n      </div>\\n    </form> \\n\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/login.component.html\n// module id = ../../../../../src/app/login.component.html\n// module chunks = 1","import { UtilityService } from './services/utility.service';\nimport { ComputeService } from './services/compute.service';\nimport { IdentityService } from './services/identity.service';\nimport { PasswordManagementService } from './services/password-management.service';\nimport { Component, OnInit, OnChanges } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  regions = ['uk-1', 'fi-1', 'de-1', 'es-1', 'us-1'];\n  loginForm: FormGroup;\n  loggedIn: boolean = false;\n  failedLogIn: boolean = false;\n  k5proxy:boolean = true;\n\n\n\n  constructor(private identityService: IdentityService,\n              private utilityService: UtilityService) { }\n\n  ngOnInit() {\n    this.identityService.loggedIn.subscribe(status => this.loggedIn = status);\n    this.utilityService.userK5CORS.subscribe(proxy => this.k5proxy = proxy);\n\n    this.loginForm = new FormGroup({\n      'loginData': new FormGroup({\n        'user': new FormControl(null, [Validators.required]),\n        'password': new FormControl(null, [Validators.required]),\n        'contract': new FormControl(null, [Validators.required]),\n        'region': new FormControl(null, [Validators.required]),\n        'k5cors': new FormControl(true)\n      })\n    });\n  }\n\n  toggleK5Proxy() {\n    //console.log(this.k5proxy);\n    this.utilityService.changek5proxy(this.k5proxy);\n    //console.log(this.k5proxy);\n  }\n\n\n  onLogin() {\n    this.identityService.login( this.loginForm.get('loginData.user').value,\n                                                this.loginForm.get('loginData.password').value,\n                                                this.loginForm.get('loginData.contract').value,\n                                                this.loginForm.get('loginData.region').value)\n                                                .subscribe(\n                                                    data => {\n                                                        //this.identityService.loggedIn = true;\n                                                        //this.failedLogIn = false;\n                                                        //console.log(\"Login.ts -> Logged In\");\n                                                        // this.identityService.getProjectList().subscribe(newProjectList => {\n                                                        //   this.projects = newProjectList;\n                                                        // });\n                                                        // this.identityService.getK5UnScopedDetails();\n\n                                                    },\n                                                    error => {\n                                                        //this.alertService.error(error);\n                                                        //this.loading = false;\n                                                        //console.log('bang - something failed during login');\n                                                        //this.failedLogIn = true;\n                                                        this.loginForm.reset();\n                                                        \n                                                    });\n    //console.log(this.loginForm);\n    //this.passwordForm.reset();\n  }\n\n \n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/login.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".btn-xl {\\n    padding: 10px 20px;\\n    font-size: 20px;\\n    border-radius: 10px;\\n  }\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/logout.component.css\n// module id = ../../../../../src/app/logout.component.css\n// module chunks = 1","module.exports = \"\\n    <button type=\\\"button\\\" class=\\\"btn-xl btn btn-danger\\\" (click)=\\\"onLogout()\\\">Logout</button>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/logout.component.html\n// module id = ../../../../../src/app/logout.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { IdentityService } from './services/identity.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private identityService: IdentityService) { }\n\n  ngOnInit() {\n  }\n\n  onLogout() {\n    this.identityService.logout();\n    // this.loginForm.reset();\n    // this.loggedIn = false;\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/logout.component.ts","export class User {\n    id: string;\n    name: string;\n    contract: string;\n    contractId: string;\n    region: string;\n    token: string;\n    globalToken: string;\n    expires: string;\n    catalog: catalog[];\n    roles: roles[];\n    projects: project[];\n}\n\nexport class catalog {\n    endpoints: endpoints[];\n}\n\nexport class endpoints {\n    id:string;\n    interface: string;\n    name: string;\n    region: string;\n    url: string;\n}\n\nexport class roles {\n    name: string;\n    id: string;\n}\n\nexport class projects {\n    project: project[];\n    length: number = projects.length;\n}\nexport class project {\n    id: string;\n    name: string;\n    description: string;\n    contractid: string;\n    enabled: boolean;\n}\n\nexport class ProjectToken {\n    projectId: string;\n    scopedToken: string;\n}\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/model/user.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/network.component.css\n// module id = ../../../../../src/app/network.component.css\n// module chunks = 1","module.exports = \"<p>\\n  network works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/network.component.html\n// module id = ../../../../../src/app/network.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-network',\n  templateUrl: './network.component.html',\n  styleUrls: ['./network.component.css']\n})\nexport class NetworkComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/network.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".fixed-panel {\\n    min-height: 200px;\\n    max-height: 200px;\\n    overflow-y: scroll;\\n    overflow-x: scroll;\\n  }\\n\\nli:hover { \\n    background-color: yellow;\\n  }\\n\\n  .term-container {\\n    background: #171717;\\n    border-radius: 5px;\\n    color: white;\\n    word-break: break-word;\\n    overflow-wrap: break-word;\\n    font-family: Monaco, Consolas, monospace;\\n    font-size: 12px;\\n    line-height: 20px;\\n    padding: 14px 18px;\\n    white-space: pre-wrap;\\n  }\\n\\n  /*** PANEL PRIMARY ***/\\n.with-nav-tabs.panel-primary .nav-tabs > li > a,\\n.with-nav-tabs.panel-primary .nav-tabs > li > a:hover,\\n.with-nav-tabs.panel-primary .nav-tabs > li > a:focus {\\n    color: #fff;\\n}\\n.with-nav-tabs.panel-primary .nav-tabs > .open > a,\\n.with-nav-tabs.panel-primary .nav-tabs > .open > a:hover,\\n.with-nav-tabs.panel-primary .nav-tabs > .open > a:focus,\\n.with-nav-tabs.panel-primary .nav-tabs > li > a:hover,\\n.with-nav-tabs.panel-primary .nav-tabs > li > a:focus {\\n\\tcolor: #fff;\\n\\tbackground-color: #3071a9;\\n\\tborder-color: transparent;\\n}\\n.with-nav-tabs.panel-primary .nav-tabs > li.active > a,\\n.with-nav-tabs.panel-primary .nav-tabs > li.active > a:hover,\\n.with-nav-tabs.panel-primary .nav-tabs > li.active > a:focus {\\n\\tcolor: #428bca;\\n\\tbackground-color: #fff;\\n\\tborder-color: #428bca;\\n\\tborder-bottom-color: transparent;\\n}\\n.with-nav-tabs.panel-primary .nav-tabs > li.dropdown .dropdown-menu {\\n    background-color: #428bca;\\n    border-color: #3071a9;\\n}\\n.with-nav-tabs.panel-primary .nav-tabs > li.dropdown .dropdown-menu > li > a {\\n    color: #fff;   \\n}\\n.with-nav-tabs.panel-primary .nav-tabs > li.dropdown .dropdown-menu > li > a:hover,\\n.with-nav-tabs.panel-primary .nav-tabs > li.dropdown .dropdown-menu > li > a:focus {\\n    background-color: #3071a9;\\n}\\n.with-nav-tabs.panel-primary .nav-tabs > li.dropdown .dropdown-menu > .active > a,\\n.with-nav-tabs.panel-primary .nav-tabs > li.dropdown .dropdown-menu > .active > a:hover,\\n.with-nav-tabs.panel-primary .nav-tabs > li.dropdown .dropdown-menu > .active > a:focus {\\n    background-color: #4a9fe9;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/project-panel.component.css\n// module id = ../../../../../src/app/project-panel.component.css\n// module chunks = 1","module.exports = \"<div *ngIf='currentProjectT && contractUsers && userServers && userLBaaS' class=\\\"container-fluid\\\">\\n  \\n  <div class=\\\"col-md-12\\\">\\n      <div class=\\\"panel with-nav-tabs panel-info\\\">  <!-- Main Tabbed Panel Wrapper --> \\n          <div class=\\\"panel-heading\\\"> <!-- Main Tabbed Panel Headings -->\\n                  <ul class=\\\"nav nav-tabs\\\">\\n                      <li *ngIf='contractProjects'><a href=\\\"#tab0global\\\" data-toggle=\\\"tab\\\">Contract Detail</a></li>\\n                      <li *ngIf='contractProjects'><a href=\\\"#tab0project\\\" data-toggle=\\\"tab\\\">Project Detail</a></li>\\n                      <li *ngIf='userServers'><a href=\\\"#tab1compute\\\" data-toggle=\\\"tab\\\">Compute <span class=\\\"badge\\\">{{userServers.length}}</span></a></li>\\n                      <li *ngIf='userStacks'> <a href=\\\"#tab2stack\\\" data-toggle=\\\"tab\\\">Stack <span class=\\\"badge\\\">{{userStacks.length}}</span></a></li>\\n                      <li *ngIf='userLBaaS'> <a href=\\\"#tabLBaaS\\\" data-toggle=\\\"tab\\\">LBaaS <span class=\\\"badge\\\">{{userLBaaS.length}}</span></a></li>\\n                      <li *ngIf='userRouters'> <a href=\\\"#tabRouter\\\" data-toggle=\\\"tab\\\">Router <span class=\\\"badge\\\">{{userRouters.length}}</span></a></li>\\n                      <li *ngIf='vpnServices && ipsecConnections && ipsecPolicies && ikePolicies'><a href=\\\"#tabIPSecVPN\\\" data-toggle=\\\"tab\\\">IPSecVPN <span class=\\\"badge\\\">{{vpnServices.vpnservices.length}}</span></a></li>\\n                      <li *ngIf='currentProjectT && userPorts && userNetworks && userSubNetworks && userRouters && false'><a href=\\\"#tabVisualisation\\\" data-toggle=\\\"tab\\\">Beta Visualisation</a></li>\\n                  </ul>\\n          </div> <!-- Main Tabbed Panel Headings -->\\n          <div class=\\\"panel-body\\\"> <!-- Tabbed Panel Body -->\\n              <div class=\\\"tab-content\\\"> <!-- Tabbed Panel Body Panes -->\\n                  <div class=\\\"tab-pane fade in active\\\" id=\\\"tab0global\\\"> <!-- First Tab -->\\n                      <div class=\\\"container-fluid\\\"> <!-- First Tab Container-->\\n                              <div class=\\\"row\\\"> <!-- First Tab Container First Row-->\\n\\n                                  <div class=\\\"col-md-6\\\"><!-- First Tab Container First Row Block 1-->\\n                                            <div  *ngIf='contractProjects' class=\\\"panel panel-default\\\"><!-- Panel Start -->\\n                                                  <div class=\\\"panel-heading\\\"><!-- Panel Heading -->\\n                                                    <h3 class=\\\"panel-title\\\">\\n                                                      Projects <span class=\\\"badge\\\">{{contractProjects.length}}</span>\\n                                                    </h3>\\n                                                  </div><!-- Panel Heading -->\\n                                                  <div class=\\\"fixed-panel panel-body\\\"><!-- Panel Body -->\\n                                                      <div *ngFor='let project of contractProjects'>\\n                                                          <li    value=\\\"project.name | json | removeQuotes\\\"\\n                                                                  (click)=\\\"stackChange(stack)\\\">{{project.name | json | removeQuotes}}</li>\\n                                                      </div>\\n                                                  </div><!-- Panel Body -->\\n                                                  <div class=\\\"panel-footer\\\"><!-- Panel Footer -->                                  \\n                                                  </div><!-- Panel Footer -->\\n                                            </div><!-- Panel Start -->\\n                                  </div><!-- First Tab Container First Row Block 1-->\\n\\n                                  <div class=\\\"col-md-6\\\"><!-- First Tab Container First Row Block 2-->\\n                                            <div  *ngIf='contractUsers' class=\\\"panel panel-default\\\"><!-- Panel Start -->\\n                                                  <div class=\\\"panel-heading\\\"><!-- Panel Heading -->\\n                                                        <h3 class=\\\"panel-title\\\">\\n                                                            Users <span class=\\\"badge\\\">{{contractUsers.length}}</span>\\n                                                        </h3>\\n                                                  </div><!-- Panel Heading -->\\n                                                  <div class=\\\"fixed-panel panel-body\\\"><!-- Panel Body -->\\n                                                    <div *ngFor='let cuser of contractUsers'>\\n                                                      <li    \\n                                                              (click)=\\\"userSelection(cuser)\\\">{{cuser.name | json | removeQuotes}}</li>\\n                                                    </div>\\n                                                  </div><!-- Panel Body -->\\n                                            </div><!-- Panel Start -->\\n                                  </div><!-- First Tab Container First Row Block 2-->\\n\\n                              </div> <!-- First Tab Container First Row-->\\n                              <div class=\\\"row\\\"> <!-- First Tab Container Second Row-->\\n                                <div  class=\\\"col-md-6\\\"><!-- First Tab Container Second Row Block 1-->\\n                                <div  *ngIf='contractGroups' class=\\\"panel panel-default\\\">\\n                                  <div class=\\\"panel-heading\\\">\\n                                    <h3 class=\\\"panel-title\\\">\\n                                      Groups <span class=\\\"badge\\\">{{contractGroups.length}}</span>\\n                                    </h3>\\n                                  </div>\\n                                  <div class=\\\"fixed-panel panel-body\\\">\\n                                    <div *ngFor='let cgroup of contractGroups'>\\n                                      <li    value=\\\"cgroup.id | json | removeQuotes\\\"\\n                                              (click)=\\\"cgroupChange(cgroup)\\\">{{cgroup.name | json | removeQuotes}}</li>\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                              </div><!-- First Tab Container Second Row Block 1-->\\n                              <div class=\\\"col-md-6\\\"><!-- First Tab Container Second Row Block 2-->\\n                                  <div *ngIf='contractRoles' class=\\\"panel panel-default\\\">\\n                                      <div class=\\\"panel-heading\\\">\\n                                        <h3 class=\\\"panel-title\\\">\\n                                          Roles <span class=\\\"badge\\\">{{contractRoles.length}}</span>\\n                                        </h3>\\n                                      </div>\\n                                      <div class=\\\"fixed-panel panel-body\\\">\\n                                        <div *ngFor='let crole of contractRoles'>\\n                                          <li    value=\\\"crole.id | json | removeQuotes\\\"\\n                                                  (click)=\\\"croleChange(crole)\\\">{{crole.name | json | removeQuotes}}</li>\\n                                        </div>\\n                                      </div>\\n                                    </div>\\n                              </div>\\n\\n                            </div> <!-- First Tab Container Second Row-->\\n                        \\n                      </div><!-- First Tab Container-->\\n                  </div> <!-- First Tab -->\\n                  <div class=\\\"tab-pane fade\\\" id=\\\"tab0project\\\"> <!-- Second Tab -->\\n                      <div class=\\\"container-fluid\\\">\\n                          <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-6\\\">\\n                                <div *ngIf='roleAssignment' class=\\\"panel panel-default\\\">\\n                                  <div class=\\\"panel-heading\\\">\\n                                    <h3 class=\\\"panel-title\\\">\\n                                      Role Assignments <span class=\\\"badge\\\">{{roleAssignment.length}}</span>\\n                                    </h3>\\n                                  </div>\\n                                    <div class=\\\"panel-heading\\\">\\n                                      <h2 class=\\\"panel-title\\\">\\n                                          User added directly to Project\\n                                      </h2>\\n                                    </div>\\n                                  \\n                                  <div class=\\\"fixed-panel panel-body\\\">\\n                                      <div *ngFor='let role of roleAssignment'>\\n                                          <li *ngIf='role.user'>{{role.user.id | json | removeQuotes | convertUserIDtoName }} ({{role.role.id | json | removeQuotes | convertRoleIDtoName }})</li>\\n                              \\n                                      </div>\\n                                  </div>\\n                                  <div class=\\\"panel-heading\\\">\\n                                      <h2 class=\\\"panel-title\\\">\\n                                          Groups attached to Project\\n                                      </h2>\\n                                    </div>\\n                                  <div class=\\\"fixed-panel panel-body\\\">\\n                                      <div *ngFor='let role of roleAssignment'>\\n                                          <li *ngIf='role.group' value=\\\"role\\\"\\n                                          (click)=\\\"groupSelection(role)\\\">{{role.group.id | json | removeQuotes| convertGroupIDtoName }} ({{role.role.id | json | removeQuotes | convertRoleIDtoName }})</li>\\n                                      </div>\\n                                  </div>\\n                                  <div class=\\\"panel-footer\\\">\\n                                      \\n                                  </div>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"col-md-6\\\">\\n                                  <div class=\\\"panel panel-default\\\">\\n                                      <div class=\\\"panel-heading\\\">\\n                                        <h3 class=\\\"panel-title\\\">\\n                                          Users in selected Group\\n                                        </h3>\\n                                      </div>\\n                                      <div class=\\\"fixed-panel panel-body\\\">\\n                                          <div *ngFor='let user of groupUsers'>\\n                                              <li *ngIf='user'>{{user.name | json | removeQuotes}}</li>\\n                                  \\n                                          </div>\\n                                      </div>\\n                                      \\n                                      \\n                                    </div>\\n                              </div>\\n\\n                            </div>\\n                        </div>\\n                  </div><!-- Second Tab -->\\n                  <div class=\\\"tab-pane fade\\\" id=\\\"tab1compute\\\"><!-- Third Tab -->\\n                      <div *ngIf='currentProjectT' class=\\\"container-fluid\\\">\\n                        <!-- <app-cloudvisualised></app-cloudvisualised> -->\\n                          <div class=\\\"row\\\">\\n                            <div *ngIf='userServers' class=\\\"col-md-4\\\">\\n                              <div class=\\\"panel panel-default\\\">\\n                                <div class=\\\"panel-heading\\\">\\n                                  <h3 class=\\\"panel-title\\\">\\n                                    Servers \\n                                  </h3>\\n                                </div>\\n                                <div class=\\\"fixed-panel panel-body\\\">\\n                                  <div *ngFor='let server of userServers | sortObjectsByName'>\\n                                    <li    value=\\\"server.id | json | removeQuotes\\\"\\n                                            (click)=\\\"serverChange(server)\\\">{{server.name | json | removeQuotes}}</li>\\n                                  </div>\\n                                </div>\\n                                <div class=\\\"panel-footer\\\">\\n                        \\n                                </div>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <div *ngIf='serverDetails' class=\\\"panel panel-default\\\">\\n                                    <div class=\\\"panel-heading\\\">\\n                                      <h3 class=\\\"panel-title\\\">\\n                                        Details of {{serverDetails.name|json | removeQuotes}}\\n                                      </h3>\\n                                    </div>\\n                                    <div class=\\\"fixed-panel panel-body\\\">\\n                                        {{serverDetails|json | removeQuotes}}\\n                                    </div>\\n                                    <div class=\\\"panel-footer\\\">\\n                                        {{serverDetails.flavor.id|json | removeQuotes}}\\n                                    </div>\\n                                  </div>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <div *ngIf='serverDetails' class=\\\"panel panel-default\\\">\\n                                    <div class=\\\"panel-heading\\\">\\n                                      <h3 class=\\\"panel-title\\\">\\n                                          Console boot logs for {{serverDetails.name|json | removeQuotes}}\\n                                      </h3>\\n                                    </div>\\n                                    <div class=\\\"term-container fixed-panel panel-body\\\">\\n                                        {{serverLogs}}\\n                                    </div>\\n                                    <div class=\\\"panel-footer\\\">\\n                                      Panel footer\\n                                    </div>\\n                                  </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                  </div><!-- Third Tab -->\\n                  <div class=\\\"tab-pane fade\\\" id=\\\"tab2stack\\\"><!-- Fourth Tab -->\\n                      <div *ngIf='currentProjectT' class=\\\"container-fluid\\\">\\n                          <div class=\\\"row\\\">\\n                            <div *ngIf='userStacks' class=\\\"col-md-4\\\">\\n                              <div class=\\\"panel panel-default\\\">\\n                                <div class=\\\"panel-heading\\\">\\n                                  <h3 class=\\\"panel-title\\\">\\n                                    Stacks \\n                                  </h3>\\n                                </div>\\n                                <div class=\\\"fixed-panel panel-body\\\">\\n                                  <div *ngFor='let stack of userStacks | stackSorter'>\\n                                    <li    value=\\\"stack.id | json | removeQuotes\\\"\\n                                            (click)=\\\"stackChange(stack)\\\">{{stack.stack_name | json| removeQuotes}}</li>\\n                                  </div>\\n                                </div>\\n                                <div class=\\\"panel-footer\\\">\\n                        \\n                                </div>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <div *ngIf='stackDetails' class=\\\"panel panel-default\\\">\\n                                    <div class=\\\"panel-heading\\\">\\n                                      <h3 class=\\\"panel-title\\\">\\n                                        Details of {{stackDetails.stack.stack_name|json| removeQuotes}}\\n                                      </h3>\\n                                    </div>\\n                                    <div class=\\\"fixed-panel panel-body\\\">\\n                                        {{stackDetails|json | removeQuotes}}\\n                                    </div>\\n                                    <div class=\\\"panel-footer\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn-xl btn btn-danger\\\" (click)=\\\"deleteStack(stackDetails)\\\">Delete Stack</button>\\n                                        \\n                                    </div>\\n                                  </div>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <div *ngIf='stackDetails' class=\\\"panel panel-default\\\">\\n                                    <div class=\\\"panel-heading\\\">\\n                                      <h3 class=\\\"panel-title\\\">\\n                                        Outputs of {{stackDetails.stack.stack_name|json| removeQuotes}}\\n                                      </h3>\\n                                    </div>\\n                                    <div class=\\\"fixed-panel panel-body\\\">\\n                                        {{stackOutputs|json | removeQuotes}}\\n                                    </div>\\n                                    <div class=\\\"panel-footer\\\">\\n                                        \\n                                    </div>\\n                                  </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                  </div><!-- Fourth Tab -->\\n                  <div class=\\\"tab-pane fade\\\" id=\\\"tabLBaaS\\\"><!-- Fifth Tab -->\\n                    <app-loadbalancer></app-loadbalancer>\\n                  </div><!-- Fifth Tab -->\\n                  <div class=\\\"tab-pane fade\\\" id=\\\"tabRouter\\\"><!-- Fifth Tab -->\\n                    <app-router></app-router>\\n                  </div><!-- Fifth Tab -->\\n                  <div class=\\\"tab-pane fade\\\" id=\\\"tabIPSecVPN\\\"><!-- Fifth Tab -->\\n                    <app-ipsecvpn></app-ipsecvpn>\\n                  </div>\\n                  <div class=\\\"tab-pane fade\\\" id=\\\"tabVisualisation\\\"><!-- Fifth Tab -->\\n                    <app-cloudvisualised *ngIf='currentProjectT && userPorts && userNetworks && userSubNetworks && userRouters && false' ></app-cloudvisualised>\\n                  </div>\\n              </div> <!-- Tabbed Panel Body Panes -->\\n          </div> <!-- Tabbed Panel Body -->\\n      </div> <!-- Main Tabbed Panel Wrapper -->\\n  </div>\\n  \\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/project-panel.component.html\n// module id = ../../../../../src/app/project-panel.component.html\n// module chunks = 1","import { NetworkService } from './services/network.service';\nimport { LoadbalancerService } from './services/loadbalancer.service';\nimport { StackService } from './services/stack.service';\nimport { UserMaintenanceService } from './services/user-maintenance.service';\nimport { ComputeService } from './services/compute.service';\nimport { IdentityService } from './services/identity.service';\nimport { project } from './model/user';\nimport { Component, OnInit } from '@angular/core';\nimport { IpsecvpnService } from './services/ipsecvpn.service';\n\n@Component({\n  selector: 'app-project-panel',\n  templateUrl: './project-panel.component.html',\n  styleUrls: ['./project-panel.component.css']\n})\nexport class ProjectPanelComponent implements OnInit {\n  userServers: any = null;\n  currentProjectT: any = null;\n  serverDetails: any = null;\n  serverLogs: any = null;\n  currentServer: any = null;\n  stackDetails: any = null;\n  userStacks: any = null;\n  stackOutputs: any = null;\n  contractProjects: any = null;\n  contractUsers: any = null;\n  contractGroups: any = null;\n  contractRoles: any = null;\n  roleAssignment: any = null;\n  groupUsers: any = null;\n  userGlobalToken: any = null;\n  userLBaaS: any = null;\n  userRouters: any = null;\n  userNetworks: any = null;\n  userSubNetworks: any = null;\n  userPorts: any = null;\n  vpnServices: any = null;\n  ipsecPolicies: any = null;\n  ikePolicies: any = null;\n  ipsecConnections: any = null;\n\n  constructor(private computeService: ComputeService,\n              private userMaintenanceService: UserMaintenanceService,\n              private identityService: IdentityService,\n              private stackService: StackService,\n              private loadbalancerService: LoadbalancerService,\n              private networkService: NetworkService,\n              private ipsecvpnService: IpsecvpnService) { }\n\n\n  ngOnInit() {\n\n    this.identityService.contractProjects.subscribe(projects => this.contractProjects = projects);\n    this.identityService.usersInGroup.subscribe(gusers => this.groupUsers = gusers);\n    this.identityService.roleAssignments.subscribe(roles => this.roleAssignment = roles);\n    this.identityService.contractUsers.subscribe(users => this.contractUsers = users);\n    this.identityService.contractGroups.subscribe(groups => this.contractGroups = groups);\n    this.identityService.contractRoles.subscribe(roles => this.contractRoles = roles);\n    this.identityService.userPToken.subscribe(currentProjectToken => this.currentProjectT = currentProjectToken);\n    this.identityService.userGToken.subscribe(globalToken => this.userGlobalToken = globalToken);\n    this.computeService.userServers.subscribe(servers => this.userServers = servers);\n    this.computeService.serverDetails.subscribe(server => this.serverDetails = server);\n    this.computeService.serverLogs.subscribe(logs => this.serverLogs = logs);\n    this.stackService.stackDetails.subscribe(stackDetail => this.stackDetails = stackDetail);\n    this.stackService.userStacks.subscribe(stacks => this.userStacks = stacks);\n    this.stackService.stackOutputs.subscribe(outputs => this.stackOutputs = outputs);\n    this.loadbalancerService.userLBaaS.subscribe(LBaaS => this.userLBaaS = LBaaS);\n    this.networkService.userRouters.subscribe(routers => this.userRouters = routers);\n    this.networkService.userNetworks.subscribe(networks => this.userNetworks = networks);\n    this.networkService.userSubNetworks.subscribe(subnets => this.userSubNetworks = subnets);\n    this.networkService.userPorts.subscribe(ports => this.userPorts = ports);\n    this.ipsecvpnService.vpnServices.subscribe(services => this.vpnServices = services);\n    this.ipsecvpnService.ipsecPolicies.subscribe(secpolicies => this.ipsecPolicies = secpolicies);\n    this.ipsecvpnService.ikePolicies.subscribe(ikepolicies => this.ikePolicies = ikepolicies);\n    this.ipsecvpnService.ipsecConnections.subscribe(connections => this.ipsecConnections = connections);\n\n\n    //console.log('Routers');\n    //console.log(this.userRouters);\n  }\n\n  serverChange(server) {\n    this.computeService.getServerDetails(this.currentProjectT, server);\n    this.computeService.getServerLogs(this.currentProjectT, server);\n    //console.log('Change Server => ');\n    //console.log(this.serverDetails);\n    //console.log(this.serverLogs);\n  }\n\n  userSelection(user) {\n    //console.log('Calling USER EMAIL API');\n    //console.log(this.userGlobalToken);\n    //console.log(user);\n    this.identityService.getUserInfo(user);\n\n  }\n\n  stackChange(stack) {\n    this.stackService.getStackDetails(this.currentProjectT, stack);\n    // outputs API call not currently implemented on K5\n    // this.stackService.getStackOutputs(this.currentProjectT, stack);\n    //console.log('Change Stack => ');\n    //console.log(this.stackDetails);\n  }\n\n  groupSelection(role) {\n    //console.log('Group Users Entry');\n    //console.log(role);\n    this.identityService.getUsersInGroup(role);\n\n  }\n\n  deleteStack(stack) {\n    \n    this.stackService.deleteStack(this.currentProjectT, stack);\n    // this.stackChange(null);\n    //this.stackService.getStackList(this.currentProjectT);\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/project-panel.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".wrapper{\\n    border: 1px;\\n    height: 250px;\\n    overflow-x: hidden;\\n    overflow-y: scroll;\\n    width: 250px;\\n }\\n .wrapper .selection{\\n   float: none;\\n   width:250px;\\n   border:1px solid #ccc\\n }\\n\\n li:hover { \\n  background-color: yellow;\\n}\\n\\n.btn-xl {\\n  padding: 10px 20px;\\n  font-size: 20px;\\n  border-radius: 10px;\\n}\\n\\n.btn-lg{\\n  padding: 10px 20px;\\n  font-size: 20px;\\n  border-radius: 0px;\\n}\\n\\n.btn-round-lg{\\n  padding: 10px 20px;\\n  font-size: 20px;\\n  border-radius: 20px;\\n}\\n.btn-round{\\nborder-radius: 17px;\\n}\\n.btn-round-sm{\\nborder-radius: 15px;\\n}\\n.btn-round-xs{\\nborder-radius: 11px;\\npadding-left: 10px;\\npadding-right: 10px;\\n}\\n/* .navbar .navbar-nav {\\n  display: inline-block;\\n  float: none;\\n  vertical-align: top;\\n}\\n\\n.navbar .navbar-collapse {\\n  text-align: center;\\n} */\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/project.component.css\n// module id = ../../../../../src/app/project.component.css\n// module chunks = 1","module.exports = \"\\n   <ul *ngIf='currentProject'>   \\n      \\n      <!-- Split button -->\\n      <div  class=\\\"btn-group\\\">  \\n        <button type=\\\"button\\\" class=\\\"btn btn-round-lg btn-danger\\\" (click)=\\\"onLogout()\\\">Logout</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-round-lg btn-success\\\">{{currentProject.name | json | removeQuotes}}</button>\\n      \\n        <button type=\\\"button\\\" class=\\\"btn btn-round-lg btn-info dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <span class=\\\"sr-only\\\">Toggle Dropdown</span>Select Project <span class=\\\"caret\\\"></span>\\n        </button>\\n      \\n\\n        <ul class=\\\"wrapper selection dropdown-menu dropdown-hover scrollable-menu\\\" >\\n          <div *ngFor='let project of projects | sortObjectsByName'>\\n            <li  *ngIf='project.enabled'  value=\\\"project.id | json | removeQuotes\\\"\\n                    (click)=\\\"projectChange(project)\\\">{{project.name | json | removeQuotes}}</li>\\n          </div>\\n        </ul>\\n      </div>\\n    </ul>\\n   \\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/project.component.html\n// module id = ../../../../../src/app/project.component.html\n// module chunks = 1","import { project } from './model/user';\nimport { Component, OnInit } from '@angular/core';\n// import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IdentityService } from './services/identity.service';\nimport { ComputeService } from './services/compute.service';\nimport { StackService } from './services/stack.service';\nimport { LoadbalancerService } from './services/loadbalancer.service';\nimport { CloudvisualisedService } from './services/cloudvisualised.service';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit {\n  // projectForm: FormGroup;\n  loggedIn: boolean;\n  projects: project[];\n  currentProject: project = null;\n\n  constructor(private identityService: IdentityService,\n              private computeService: ComputeService,\n              private stackService: StackService,\n              private loadBalancerService: LoadbalancerService,\n              private cloudVisualisedService: CloudvisualisedService) { }\n\n  ngOnInit() {\n    this.identityService.loggedIn.subscribe(status => this.loggedIn = status);\n    this.identityService.userProjects.subscribe(currentProjects => this.projects = currentProjects);\n    this.identityService.currentProject.subscribe(selectedProject => this.currentProject = selectedProject);\n  \n    // this.projectForm = new FormGroup({\n    //  'projectData': new FormGroup({\n    //    'project': new FormControl(null, [Validators.required])\n    //  })\n    // });\n    // this.projects = this.identityService.k5projects;\n    //console.log('NGONINIT on Projects Component - Projects, Project, Logged In Status are as follows (next three lines) : ');\n    //console.log(this.projects);\n//     for (let index in this.projects) {\n//       //console.log(this.projects[index].name);\n//   }\n//   for (let project of this.projects.project) {\n//     //console.log(project.name);\n// }\n    //console.log(this.currentProject);\n    //console.log(this.loggedIn);\n  }\n\n  onLogout() {\n    this.identityService.logout();\n    // this.loginForm.reset();\n    // this.loggedIn = false;\n\n  }\n\n  projectChange(selectedProject) {\n\n    this.computeService.changeServerDetails(null);\n    this.computeService.changeServerList(null);\n    this.computeService.changeServerLogs(null);\n    this.stackService.changeStackList(null);\n    this.stackService.changeStackDetails(null);\n    this.stackService.changeStackOutputs(null);\n    this.loadBalancerService.changeLBaaSList(null);\n    this.loadBalancerService.changeLBaaSDetails(null);\n    this.identityService.changeProject(selectedProject);\n    //console.log('333333333333. Selected Project ID to be scoped to...');\n    //console.log(selectedProject.id);\n    //console.log(selectedProject.name);\n    //console.log(selectedProject);\n    this.identityService.getProjectScopedToken(selectedProject.id)\n      .subscribe( \n        data => \n        { //console.log('new project token');\n          //console.log(data);\n        },\n        err => console.log(err),\n        () => {//console.log('End of new Project Selection');\n                 });\n      //console.log('PROJECT CHANGE SELECTED Projects, Project, Logged In Status are as follows (next three lines) : ');\n      //console.log(this.projects);\n      //console.log(this.currentProject);\n      //console.log(this.loggedIn);\n\n  }\n}\n// .subscribe(\n//   res => {},\n//   err => console.log(err),\n//   () => {//console.log('End of new Project Selection');\n//           this.cloudvisualisedService.getNodes(); });\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/project.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/router.component.css\n// module id = ../../../../../src/app/router.component.css\n// module chunks = 1","module.exports = \"<div *ngIf='currentProjectT' class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div *ngIf='userRouters' class=\\\"col-md-6\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">\\n            Routers \\n          </h3>\\n        </div>\\n        <div class=\\\"fixed-panel panel-body\\\">\\n          <div *ngFor='let router of userRouters'>\\n            <li    value=\\\"router | json | removeQuotes\\\"\\n                    (click)=\\\"routerChange(router)\\\">{{router.name | json | removeQuotes}}</li>\\n          </div>\\n        </div>\\n        <div class=\\\"panel-footer\\\">\\n\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf='routerDetails' class=\\\"col-md-6\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">\\n            Router {{routerDetails.name | json | removeQuotes}}\\n          </h3>\\n        </div>\\n        <div class=\\\"fixed-panel panel-body\\\">\\n          <div>\\n            {{routerDetails| json| removeQuotes}}\\n          </div>\\n        </div>\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">\\n            Current Routes\\n          </h3>\\n        </div>\\n        <div class=\\\"fixed-panel panel-body\\\">\\n            <div>\\n              {{routerDetails.routes| json| removeQuotes}}\\n            </div>\\n          </div>\\n          <div *ngIf='routerStatus'>\\n          <div *ngIf='routerStatus.status != 200' class=\\\"panel-heading\\\">\\n              <h3 class=\\\"panel-title\\\">\\n              Route Update Status\\n            </h3>\\n          </div>\\n          <div *ngIf='routerStatus.status != 200' class=\\\"fixed-panel panel-body\\\">\\n              <div>\\n                {{routerStatus| json| removeQuotes}}\\n              </div>\\n            </div>\\n          </div>\\n        <div class=\\\"panel-footer\\\">\\n            <form [formGroup]=\\\"newRoutesForm\\\" >\\n                <div formGroupName=\\\"routeData\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"routes\\\">\\n                        Routes\\n                      </label>\\n                      <input \\n                        type=\\\"text\\\" \\n                        class=\\\"form-control\\\" \\n                        id=\\\"routes\\\"\\n                        formControlName=\\\"routes\\\">\\n                      <span\\n                        *ngIf=\\\"!newRoutesForm.get('routeData.routes').valid && newRoutesForm.get('routeData.routes').touched\\\"\\n                        class=\\\"help-block\\\">Please enter valid K5 routes e.g. \\n                        [{{'{'}}\\n                        \\\"nexthop\\\": \\\"192.168.0.7\\\", \\\"destination\\\": \\\"10.0.0.0/24\\\"{{'}'}},\\n                        {{'{'}}\\n                        \\\"nexthop\\\": \\\"192.168.0.7\\\", \\\"destination\\\": \\\"172.16.0.0/24\\\"{{'}'}},\\n                        {{'{'}}\\n                        \\\"nexthop\\\": \\\"192.168.0.254\\\", \\\"destination\\\": \\\"0.0.0/0\\\"\\n                        {{'}'}}]\\n                     </span>\\n                    </div>\\n                  </div>\\n            \\n            <button type=\\\"button\\\" class=\\\"btn-xl btn btn-info\\\" [disabled]=\\\"!newRoutesForm.get('routeData').valid\\\" (click)=\\\"onRouteAppend(newRoutesForm.get('routeData.routes').value)\\\">Append To Existing Routes</button>\\n            <button type=\\\"button\\\" class=\\\"btn-xl btn btn-success\\\" [disabled]=\\\"!newRoutesForm.get('routeData').valid\\\" (click)=\\\"onRouteReplace(newRoutesForm.get('routeData.routes').value)\\\">Replace Existing Routes</button>\\n            <button type=\\\"button\\\" class=\\\"btn-xl btn btn-danger\\\" (click)=\\\"onRouteDelete()\\\">Purge All Routes</button>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/router.component.html\n// module id = ../../../../../src/app/router.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { NetworkService } from './services/network.service';\nimport { IdentityService } from './services/identity.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-router',\n  templateUrl: './router.component.html',\n  styleUrls: ['./router.component.css']\n})\nexport class RouterComponent implements OnInit {\n  userRouters: any;\n  currentProjectT: any;\n  routerDetails: any;\n  newRoutesForm: FormGroup;\n  currentRouter: any;\n  routerStatus: any;\n\n  constructor(  private networkService: NetworkService,\n                private identityService: IdentityService) { }\n\n  ngOnInit() {\n    this.networkService.userRouters.subscribe(routers => this.userRouters = routers);\n    this.networkService.routerDetails.subscribe(routerDetail => this.routerDetails = routerDetail);\n    this.networkService.routerStatus.subscribe(routerUpdateStatus => this.routerStatus = routerUpdateStatus);\n    this.identityService.userPToken.subscribe(currentProjectToken => this.currentProjectT = currentProjectToken);\n\n    this.newRoutesForm = new FormGroup({\n      'routeData': new FormGroup({\n        'routes': new FormControl(null, [Validators.required])\n      })\n    });\n\n    console.log('Router Details');\n    console.log(this.userRouters);\n  }\n\n  routerChange(router) {\n    console.log(router);\n    this.networkService.getRouterDetails(this.currentProjectT, router);\n    this.currentRouter = router;\n    //console.log('Change LBaaS Detail => ');\n    //console.log(this.userLBaaSDetails);\n  }\n\n\n  onRouteReplace(routes) {\n    this.networkService.updateRouterRoutes(this.currentProjectT, this.currentRouter, routes);\n    this.newRoutesForm.reset();\n  }\n\n  onRouteAppend(routes) {\n    let newRoutes = null;\n    if (this.routerDetails.routes.length > 0) {\n      newRoutes = JSON.parse(routes);\n      let existingRoutes = this.routerDetails.routes;\n      for (const newRoute of newRoutes){\n        existingRoutes.push(newRoute);\n        newRoutes = existingRoutes;\n      }\n      newRoutes = JSON.stringify(existingRoutes);\n    }\n    this.networkService.updateRouterRoutes(this.currentProjectT, this.currentRouter, newRoutes);\n    this.newRoutesForm.reset();\n    console.log(this.routerStatus);\n  }\n\n  onRouteDelete() {\n    this.networkService.updateRouterRoutes(this.currentProjectT, this.currentRouter, '[]');\n    this.newRoutesForm.reset();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/router.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/server.component.css\n// module id = ../../../../../src/app/server.component.css\n// module chunks = 1","module.exports = \"<form [formGroup]=\\\"passwordForm\\\" >        \\n<div *ngIf=\\\"passwordForm.get('serverData.project').valid\\\" class=\\\"form-group\\\">\\n          <label for=\\\"server\\\">\\n            Please select a server\\n          </label>\\t\\t\\t\\t\\t\\n          <select\\n            id=\\\"server\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"server\\\"\\t\\t\\t\\t\\t\\t\\n            name=\\\"server\\\"\\n            (change)=\\\"serverChange()\\\">\\n            <option [value]=\\\"null\\\">Choose a server</option>\\n            <option *ngFor=\\\"let server of servers | sortObjectsByName\\\" [value]=\\\"server.id\\\">{{server.name}}</option>\\n            \\n          </select>\\n          <span\\n            *ngIf=\\\"!passwordForm.get('serverData.server').valid && passwordForm.get('serverData.server').touched\\\"\\n            class=\\\"help-block\\\">Please select a windows server from the list\\n          </span>\\n        </div>\\n        <div *ngIf=\\\"passwordReceived\\\" class=\\\"form-group\\\">\\n          <label for=\\\"server\\\">\\n            Encrypted password\\n          </label>\\n          <p class=\\\"form-control\\\">{{encryptedPassword}}</p>\\n\\n        </div>\\n        <div *ngIf=\\\"passwordForm.get('serverData.server').valid\\\" class=\\\"form-group\\\">\\n          <label for=\\\"pemkey\\\">\\n            Paste private ssh key below\\n          </label>\\t\\t\\t\\t\\t\\n          <textarea\\n            name=\\\"pemkey\\\"\\n            rows=\\\"3\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"pemkey\\\">\\n          </textarea>\\n          <span\\n            *ngIf=\\\"!passwordForm.get('serverData.pemkey').valid && passwordForm.get('serverData.pemkey').touched\\\"\\n            class=\\\"help-block\\\">Please paste the private ssh key file that is associated with the public ssh key used to build the server\\n          </span>\\t\\t\\t\\t\\t\\t\\n        </div>\\n        <div *ngIf=\\\"passwordForm.get('serverData').valid\\\" class=\\\"form-group\\\">\\n          <button type=\\\"button\\\" (click)=\\\"onThisButton()\\\" class=\\\"btn btn-primary btn-large\\\" [disabled]=\\\"!passwordForm.get('loginData').valid\\\">\\n            Retrieve Password\\n          </button>\\n        </div>\\n    <div *ngIf=\\\"passwordForm.get('serverData').valid\\\" class=\\\"form-group\\\">\\n      <div class=\\\"jumbotron\\\">\\n        <h2>\\n          The password is\\n        </h2>\\n        <p>\\n          An amazing Password\\n        </p>\\n      </div>\\n    </div>\\n    \\n   </form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/server.component.html\n// module id = ../../../../../src/app/server.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-server',\n  templateUrl: './server.component.html',\n  styleUrls: ['./server.component.css']\n})\nexport class ServerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  // serverChange(){\n  //   let token = this.currentScopedToken;\n  //   let serverId = this.passwordForm.get('serverData.server').value;\n  //   //console.log('Server Password Prerequisites');\n  //   //console.log(token);\n  //   //console.log(serverId);\n  //   this.passwordReceived = false;\n  //   this.computeService.getServerPassword(token, serverId)\n  //         .subscribe( serverPassword => {\n  //           this.passwordReceived = true;\n  //           //console.log('Encrypted Password is');\n  //           //console.log(serverPassword);\n  //           this.encryptedPassword = serverPassword;\n            \n  //         });\n       \n  // }\n\n\n\n  // onThisButton() {\n  //     //console.log('Decoding Key now')\n  //     //console.log(this.passwordForm.get('serverData').value);\n  //     //console.log(this.passwordManagementService.decrypt_data(this.passwordForm.get('serverData.pemkey').value,this.encryptedPassword));  \n  //   //this.passwordForm.reset();\n  // }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/server.component.ts","import { NetworkService } from './network.service';\nimport { LoadbalancerService } from './loadbalancer.service';\nimport { ComputeService } from './compute.service';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\ninterface IVisualLink {\n  source: number;\n  target: number;\n  weight: number;\n}\n\nclass VisualLink implements IVisualLink {\n  source: number;\n  target: number;\n  weight: number;\n\n  constructor(source: number, target: number, weight?: number) {\n      this.source = source;\n      this.target = target;\n      this.weight = weight || 1;\n  }\n\n}\n\n\ninterface IVisualNode {\n  type: string;\n  id: string;\n  name: string;\n  status?: string;\n  availability_zone?: string;\n  other?: string;\n  links: Array<string>;\n  device_id?: string;\n  fixed_ips?: string;\n  enable_dhcp?: boolean;\n  network_id?: string;\n  external_gateway_info?: any;\n  LoadBalancerName?: string;\n  State?: string;\n  DNSName?: string;\n  Subnets?: string;\n  subnets?: string;\n\n\n\n}\n\nclass VisualNode implements IVisualNode {\n  type: string;\n  id: string;\n  name: string;\n  availability_zone: string;\n  links: Array<string>;\n  status?: string;\n  other?: string;\n  device_id?: string;\n  device_owner?: string;\n  fixed_ips?: string;\n  enable_dhcp?: boolean;\n  network_id?: string;\n  external_gateway_info?: any;\n  LoadBalancerName?: string;\n  State?: string;\n  DNSName?: string;\n  Subnets?: string;\n  subnets?: string;\n\n  constructor(  type: string,\n                id: string,\n                name: string,\n                availability_zone: string\n                ) {\n      this.id = id;\n      this.name = name;\n      this.type = type;\n      this.availability_zone = availability_zone;\n      this.links = [];\n  }\n\n  addLink(link: string): void {\n      this.links.push(link);\n  }\n}\n\nclass VisualisationData {\n  nodes: Array<VisualNode>;\n  links: Array<VisualLink>;\n\n  constructor(nodes: Array<VisualNode>, links: Array<VisualLink>) {\n    this.nodes = nodes;\n    this.links = links;\n\n  }\n}\n\n@Injectable()\nexport class CloudvisualisedService {\n  k5Nodes: VisualisationData;\n  servers: any;\n  ports: any;\n  subnets: any;\n  networks: any;\n  routers: any;\n  loadbalancers: any;\n\n  localNodeList = new Array<VisualNode>();\n  localEdgeList = new Array<VisualLink>();\n\n  private nodeList = new BehaviorSubject<VisualNode[]>([]);\n  currentNodeList = this.nodeList.asObservable();\n\n  private edgeList = new BehaviorSubject<VisualLink[]>([]);\n  currentEdgeList = this.edgeList.asObservable();\n\n  private visualData = new BehaviorSubject<VisualisationData>(null);\n  currentVisualData = this.visualData.asObservable();\n\n  constructor() {}\n  \n  changeVisualData(data) {\n    this.visualData.next(data);\n  }\n\n  updateNodeList(nodes) {\n    //console.log('Update Called');\n    this.nodeList.next(nodes);\n  }\n\n  resetNodeList() {\n    //console.log('Reset Called');\n    this.localNodeList = new Array<VisualNode>();\n    this.nodeList.next(this.localNodeList);\n  }\n\n  locateIndexinNodeList(item: string, nodeList: Array<VisualNode>) {\n    for (let node of nodeList) {\n      if (item === node.id) {\n        //console.log('link Match') ;\n        //console.log(node.id, item);\n        return nodeList.indexOf(node);\n      }\n    }\n    //console.log('link No Match') ;\n    // //console.log(node.id, item);\n      \n    return false;\n    \n  }\n\n\n  generateEdges(nodelist: Array<VisualNode>) {\n    this.localEdgeList = new Array<VisualLink>();\n    for (let node in nodelist) {\n      //console.log('Processing Node ', node);\n      for (let link of nodelist[node].links) {\n        const linkIndex = this.locateIndexinNodeList(link, this.localNodeList);\n        if (linkIndex) {\n          //console.log('target');\n          //console.log(linkIndex);\n          //console.log('source');\n          //console.log(node);\n          const newLink = new VisualLink(+node, linkIndex);\n          this.localEdgeList.push(newLink);\n        }\n        // let source: number = +node;\n        // let target: number = nodelist.indexOf(link);\n        // this.localEdgeList.push(source,target);\n        \n        \n      }\n    }\n\n    //console.log('Finished Link List');\n    //console.log(this.localEdgeList);\n    \n  }\n\n  getNodes(type: string, nodelist: Array<VisualNode>) {\n    //console.log('Visualisation Nodes ' + type);\n    //console.log(nodelist);\n    this.localNodeList = this.nodeList.getValue();\n    for (let node of nodelist) {\n      //console.log(node);\n      let newNode = new VisualNode(type, node.id, node.name, node.availability_zone);\n      // let newEdge = new VisualLink(1, 1);\n\n      switch (type) {\n        case 'port': {\n           // statements;\n           //newNode.availability_zone = node.availability_zone;\n           console.log(node);\n           const subtype = (node.device_owner).split(':');\n           if (node.name === '') {\n             newNode.name = node.id;\n           }\n           if (subtype[1] === 'dhcp') {\n            newNode.name = type + ': ' + subtype[1] + ': ' + newNode.name;\n            newNode.type = type + ': ' + subtype[1];\n           } else {\n            newNode.name = type + ': ' + subtype[0] + ': ' + newNode.name;\n            newNode.type = type + ': ' + subtype[0];\n           }\n\n           newNode.status = node.status;\n           newNode.addLink(node.device_id);\n           // newNode.addLink(node.network_id);\n           for (let link of node.fixed_ips) {\n             if (link['subnet_id']) {\n              newNode.addLink(link['subnet_id']);\n             }\n           }\n           break;\n        }\n        case 'network': {\n          // statements;\n          console.log(node);\n          if (node['router:external'] === true) {\n            console.log('External Network');\n            newNode.status = node.status;\n            for (let link of node.subnets) {\n              //console.log('Network Subnets');\n              //console.log(node.subnets);\n              //console.log(link);\n              newNode.addLink(link);\n            }\n            newNode.name = type + ': ' + newNode.name;\n          } else {\n            console.log('Unwanted Network');\n            continue;\n\n          }\n          break;\n        }\n        case 'subnetwork': {\n          // statements;\n          if (node.enable_dhcp) {\n            newNode.status = 'DHCP';\n          } else {\n            newNode.status = 'NO_DHCP';\n          }\n          //console.log('failing here => ' + node.network_id);\n          newNode.addLink(node.network_id);\n          newNode.name = type + ': ' + newNode.name;\n          break;\n        }\n        case 'router': {\n          // statements;\n          //console.log(node);\n          newNode.status = node.status;\n          if (node.external_gateway_info != null) {\n            newNode.addLink(node.external_gateway_info.external_fixed_ips[0]['subnet_id']);\n          } else {\n            newNode.addLink(node.id);\n          }\n          newNode.name = type + ': ' + newNode.name;\n          break;\n        }\n        case 'lbaas': {\n           // statements;\n           newNode.name = node.LoadBalancerName;\n           newNode.status = node.State;\n           newNode.other = node.DNSName;\n           newNode.id = node.LoadBalancerName;\n           for (let link of node.Subnets) {\n             newNode.addLink(link['member']);\n            }\n           newNode.name = type + ': ' + newNode.name;\n           break;\n        }\n        default: {\n           // statements;\n           break;\n        }\n     }\n     //console.log(newNode);\n      // //console.log(this.routers);\n      // //console.log(this.loadbalancers);\n    this.localNodeList.push(newNode);\n    }\n\n    //console.log(this.localNodeList);\n    this.updateNodeList(this.localNodeList);\n    //console.log(this.currentNodeList);\n    this.generateEdges(this.localNodeList);\n    this.k5Nodes = new VisualisationData(this.localNodeList, this.localEdgeList);\n    console.log('Final OutPut for D3JS');\n    console.log(this.k5Nodes);\n    //console.log(this.k5Nodes);\n    this.changeVisualData(this.k5Nodes);\n\n  }\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/cloudvisualised.service.ts","import { Injectable} from '@angular/core';\nimport { Http, RequestMethod, Request, Headers, Response, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { User, project, projects, ProjectToken } from '../model/user';\nimport { IdentityService } from '../services/identity.service';\nimport { UtilityService } from '../services/utility.service';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class ComputeService {\n    private userServerList = new BehaviorSubject<any>(null);\n    userServers = this.userServerList.asObservable();\n    private userServerDetails = new BehaviorSubject<any>(null);\n    serverDetails = this.userServerDetails.asObservable();\n    private userServerLogs = new BehaviorSubject<any>(null);\n    serverLogs = this.userServerLogs.asObservable();\n    // private userProjectToken = new BehaviorSubject<Response>(null);\n    // userPToken = this.userProjectToken.asObservable();\n   // currentProject: project = null;\n    // currentProjectToken: Response = null;\n\n    constructor(private http: Http,\n                private utilitiesService: UtilityService) { }\n\n    changeServerLogs(serverLogs: any) {\n        this.userServerLogs.next(serverLogs);\n    }\n\n    changeServerList(userServers: any) {\n        this.userServerList.next(userServers);\n    }\n\n    changeServerDetails(serverDetails: any) {\n        this.userServerDetails.next(serverDetails);\n    }\n\n    getServerList(k5scopedtoken: any) {\n        //console.log('compute token');\n        //console.log(k5scopedtoken);\n\n        let computeURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'compute');\n        computeURL = computeURL.concat('/servers/detail');\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(computeURL);\n\n        const getheaders: Headers = new Headers();\n        getheaders.append('Content-Type', 'application/json');\n        getheaders.append('Accept', 'application/json');\n        getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n        const headeropts: RequestOptions = new RequestOptions();\n        headeropts.headers = getheaders;\n\n        return this.http.get(proxiedURL, headeropts)\n            .map((res: any) => {\n                //console.log('New Server List ->');\n                //console.log(res.json().servers);\n                this.changeServerList(res.json().servers);\n\n                // return res;\n                })\n            .subscribe(\n                    data => console.log(data),\n                    err => console.log(err),\n                    () => console.log('Server list complete'));\n\n    }\n\n    getServerDetails(k5scopedtoken: any, server: any) {\n\n        let computeURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'compute');\n        computeURL = computeURL.concat('/servers/', server.id);\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(computeURL);\n\n        const getheaders: Headers = new Headers();\n        getheaders.append('Content-Type', 'application/json');\n        getheaders.append('Accept', 'application/json');\n        getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n        const headeropts: RequestOptions = new RequestOptions();\n        headeropts.headers = getheaders;\n\n        return this.http.get(proxiedURL, headeropts)\n            .map((res: any) => {\n                //console.log('nova server details');\n                //console.log(res.json().server);\n                this.changeServerDetails(res.json().server);\n                return res;\n                })\n            .subscribe(\n                        data => console.log(data),\n                        err => console.log(err),\n                        () => console.log('yay'));\n\n    }\n\n    getServerPassword(k5scopedtoken: any, serverid: any) {\n        //console.log('Server Password Function');\n        //console.log(k5scopedtoken);\n        //console.log(serverid);\n\n        let computeURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'compute');\n        computeURL = computeURL.concat('/servers/', serverid, '/os-server-password');\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(computeURL);\n\n        const getheaders: Headers = new Headers();\n        getheaders.append('Content-Type', 'application/json');\n        getheaders.append('Accept', 'application/json');\n        getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n        const headeropts: RequestOptions = new RequestOptions();\n        headeropts.headers = getheaders;\n\n        return this.http.get(proxiedURL, headeropts)\n            .map((res: any) => {\n                //console.log('server password');\n                //console.log(res.json().password);\n                return res.json().password;\n                });\n\n    }\n\n    getServerLogs(k5scopedtoken: any, server: any) {\n        //console.log('Server Logs Function');\n        //console.log(k5scopedtoken);\n        //console.log(server.id);\n\n        let computeURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'compute');\n        computeURL = computeURL.concat('/servers/', server.id, '/action');\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(computeURL);\n        const body = {\n            'os-getConsoleOutput': {\n                'length': 1000\n            }\n        };\n\n\n        const bodyString = JSON.stringify(body); // Stringify payload\n        const postheaders: Headers = new Headers();\n        postheaders.append('Content-Type', 'application/json');\n        postheaders.append('Accept', 'application/json');\n        postheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n        const headeropts: RequestOptions = new RequestOptions();\n        headeropts.headers = postheaders;\n\n        return this.http.post(proxiedURL, bodyString, headeropts)\n            .map((res: any) => {\n                this.changeServerLogs(res.json().output);\n                //console.log('server logs');\n                //console.log(res.json().output);\n                // return res.json().password;\n                })\n            .subscribe(\n                        data => console.log(data),\n                        err => console.log(err),\n                        () => console.log('got logs complete'));\n\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/compute.service.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { IdentityService } from '../services/identity.service';\n\n@Pipe({\n  name: 'convertGroupIDtoName'\n})\nexport class ConvertGroupIDtoNamePipe implements PipeTransform {\n\n  contractGroups: any = null;\n\n  constructor(private identityService: IdentityService) {\n    this.identityService.contractGroups.subscribe(groups => this.contractGroups = groups);\n   \n    // //console.log('Contract  Group IDs in Pipe constructor');\n    // //console.log(this.contractGroups);\n\n               }\n\n  transform(value: any, args?: any): any {\n    // //console.log('Contract Users iside Pipe');\n    // //console.log(this.contractGroups);\n    let itemName = 'None';\n\n    for (let item in this.contractGroups) {\n\n        if (this.contractGroups[item].id === value) {\n            // //console.log('Group Comparison');\n            // //console.log(value);\n            // //console.log((this.contractGroups[item].id));\n            // //console.log('Group PipeMatch' + (this.contractGroups[item].name));\n            itemName = this.contractGroups[item].name;\n            break;\n        } else {\n          // //console.log('Group Comparison');\n          // //console.log(value);\n          // //console.log((this.contractGroups[item].id));\n        }\n\n    }\n\n    return itemName;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/convert-group-idto-name.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { IdentityService } from '../services/identity.service';\n\n@Pipe({\n  name: 'convertProjectIDtoName'\n})\nexport class ConvertProjectIDtoNamePipe implements PipeTransform {\n\n  contractProjects: any = null;\n\n  constructor(private identityService: IdentityService) {\n    this.identityService.contractProjects.subscribe(projects => this.contractProjects = projects);\n    \n    // //console.log('Contract Project IDs in Pipe constructor');\n    // //console.log(this.contractProjects);\n\n               }\n\n  transform(value: any, args?: any): any {\n    // //console.log('Contract Users iside Pipe');\n    // //console.log(this.contractProjects);\n    let itemName = 'None';\n\n    for (let item in this.contractProjects) {\n\n        if (this.contractProjects[item].id === value) {\n            // //console.log('Comparison');\n            // //console.log(value);\n            // //console.log((this.contractProjects[item].id));\n            // //console.log('PipeMatch' + (this.contractProjects[item].name));\n            itemName = this.contractProjects[item].name;\n            break;\n        } else {\n          // //console.log('Comparison');\n          // //console.log(value);\n          // //console.log((this.contractProjects[item].id));\n        }\n\n    }\n\n    return itemName;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/convert-project-idto-name.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { IdentityService } from '../services/identity.service';\n\n@Pipe({\n  name: 'convertRoleIDtoName'\n})\nexport class ConvertRoleIDtoNamePipe implements PipeTransform {\n\n  contractRoles: any = null;\n\n\n  constructor(private identityService: IdentityService) {\n    this.identityService.contractRoles.subscribe(roles => this.contractRoles = roles);\n    \n    // //console.log('Contract IDs in Pipe constructor');\n    // //console.log(this.contractRoles);\n\n               }\n\n  transform(value: any, args?: any): any {\n    // //console.log('Contract Users iside Pipe');\n    // //console.log(this.contractRoles);\n    let itemName = 'None';\n\n    for (let item in this.contractRoles) {\n\n        if (this.contractRoles[item].id === value) {\n            // //console.log('Comparison');\n            // //console.log(value);\n            // //console.log((this.contractRoles[item].id));\n            // //console.log('PipeMatch' + (this.contractRoles[item].name));\n            itemName = this.contractRoles[item].name;\n            break;\n        } else {\n          // //console.log('Comparison');\n          // //console.log(value);\n          // //console.log((this.contractRoles[item].id));\n        }\n\n    }\n\n    return itemName;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/convert-role-idto-name.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'convertSubset2Array'\n})\nexport class ConvertSubset2ArrayPipe implements PipeTransform {\n\n  transform(value, args:string[]) : any {\n    let keys = [];\n    for (let key in value) {\n      keys.push({key: key, value: value[key]});\n    }\n    return keys;\n  }\n\n }\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/convert-subset2-array.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { IdentityService } from '../services/identity.service';\n\n@Pipe({\n  name: 'convertUserIDtoName'\n})\nexport class ConvertUserIDtoNamePipe implements PipeTransform {\n\n  contractUsers: any  = null;\n\n  constructor(private identityService: IdentityService) {\n    this.identityService.contractUsers.subscribe(users => this.contractUsers = users);\n\n    // //console.log('Contract User IDs in Pipe constructor');\n    // //console.log(this.contractUsers);\n\n               }\n\n  transform(value: any, args?: any): any {\n    // //console.log('Contract Users iside Pipe');\n    // //console.log(this.contractUsers);\n    let itemName = 'None';\n\n    for (let item in this.contractUsers) {\n\n        if (this.contractUsers[item].id === value) {\n            // //console.log('Comparison');\n            // //console.log(value);\n            // //console.log((this.contractUsers[item].id));\n            // //console.log('PipeMatch' + (this.contractUsers[item].name));\n            itemName = this.contractUsers[item].name;\n            break;\n        } else {\n          // //console.log('Comparison');\n          // //console.log(value);\n          // //console.log((this.contractUsers[item].id));\n        }\n\n    }\n\n    return itemName;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/convert-user-idto-name.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'displayObject'\n})\nexport class DisplayObjectPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return Object.keys(value).map(key => {\n      Object.assign({ key }, value[key]);\n      // //console.log(\"Piping Object\");\n      // //console.log(key);\n      // //console.log(value[key].name);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/display-object.pipe.ts","import { IpsecvpnService } from './ipsecvpn.service';\nimport { CloudvisualisedService } from './cloudvisualised.service';\nimport { NetworkService } from './network.service';\nimport { StackService } from './stack.service';\nimport { LoadbalancerService } from './loadbalancer.service';\nimport { User, project, ProjectToken } from './../model/user';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Http, RequestMethod, Request, Headers, Response, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { UtilityService } from './utility.service';\nimport { ComputeService } from './compute.service';\n\n@Injectable()\nexport class IdentityService {\n    user = new User();\n\n    // k5projects: projects;\n    vpnServices: any;\n    vpnService: any;\n    ipsecPolicies: any;\n    ipsecPolicy: any;\n    ikePolicies: any;\n    ikePolicy: any;\n    ipsecConnections: any;\n    ipsecConnection: any;\n    \n    private userProjectList = new BehaviorSubject<project[]>(null);\n    userProjects = this.userProjectList.asObservable();\n    private contractProjectList = new BehaviorSubject<any>(null);\n    contractProjects = this.contractProjectList.asObservable();\n    private contractUserList = new BehaviorSubject<any>(null);\n    contractUsers = this.contractUserList.asObservable();\n    private contractRoleList = new BehaviorSubject<any>(null);\n    contractRoles = this.contractRoleList.asObservable();\n    private contractGroupList = new BehaviorSubject<any>(null);\n    contractGroups = this.contractGroupList.asObservable();\n    private userRegionalToken = new BehaviorSubject<Response>(null);\n    userRToken = this.userRegionalToken.asObservable();\n    private userGlobalToken = new BehaviorSubject<Response>(null);\n    userGToken = this.userGlobalToken.asObservable();\n\n    // k5response: Response;\n    // k5Globalresponse: Response;\n    // loggedIn :boolean = false;\n    private userLoggedIn = new BehaviorSubject<boolean>(false);\n    loggedIn = this.userLoggedIn.asObservable();\n    // currentProject: project;\n    private selectedProject = new BehaviorSubject<project>(null);\n    currentProject = this.selectedProject.asObservable();\n    private userProjectToken = new BehaviorSubject<Response>(null);\n    userPToken = this.userProjectToken.asObservable();\n    private projectRoleAssignments = new BehaviorSubject<Response>(null);\n    roleAssignments = this.projectRoleAssignments.asObservable();\n    private usersInGroupList = new BehaviorSubject<Response>(null);\n    usersInGroup = this.usersInGroupList.asObservable();\n    private availabilityZoneList = new BehaviorSubject<Response>(null);\n    availabilityZones = this.availabilityZoneList.asObservable();\n    private currentAvailabilityZone = new BehaviorSubject<Response>(null);\n    currentAZ = this.currentAvailabilityZone.asObservable();\n    //servers: any = null;\n    // k5currentScopedToken: Response;\n\n    constructor(private http: Http,\n                private utilityService: UtilityService,\n                private computeService: ComputeService,\n                private stackService: StackService,\n                private loadBalancerService: LoadbalancerService,\n                private networkService: NetworkService,\n                private cloudvisualisedService: CloudvisualisedService,\n                private ipsecvpnService: IpsecvpnService) {\n\n        // this.computeService.userServers.subscribe(currentServers => this.servers = currentServers);\n        this.ipsecvpnService.ipsecPolicies.subscribe(policies => this.ipsecPolicies = policies);\n        this.ipsecvpnService.ipsecPolicy.subscribe(policy => this.ipsecPolicy = policy);\n        this.ipsecvpnService.ikePolicies.subscribe(policies => this.ikePolicies = policies);\n        this.ipsecvpnService.ikePolicy.subscribe(policy => this.ikePolicy = policy);\n        this.ipsecvpnService.vpnServices.subscribe(services => this.vpnServices = services);\n        this.ipsecvpnService.vpnService.subscribe(service => this.vpnService = service);\n        this.ipsecvpnService.ipsecConnections.subscribe(connections => this.ipsecConnections = connections);\n        this.ipsecvpnService.ipsecConnection.subscribe(connection => this.ipsecConnection = connection);\n    }\n\n    changeAZList(azones: any) {\n        this.availabilityZoneList.next(azones);\n    }\n\n    changeAZ(azone: any) {\n        this.currentAvailabilityZone.next(azone);\n    }\n\n    changeUsersInGroup(users: any) {\n        this.usersInGroupList.next(users);\n    }\n\n\n    changeRoleAssignments(roleAssignments: any) {\n        this.projectRoleAssignments.next(roleAssignments);\n    }\n\n\n    changeContractUsers(contractUsers: any) {\n        this.contractUserList.next(contractUsers);\n    }\n    changeContractGroups(contractGroups: any) {\n        this.contractGroupList.next(contractGroups);\n    }\n    changeContractRoles(contractRoles: any) {\n        this.contractRoleList.next(contractRoles);\n    }\n    changeContractProjects(contractProjects: any) {\n        this.contractProjectList.next(contractProjects);\n    }\n\n    changeProject(currentProject: project) {\n        this.selectedProject.next(currentProject);\n    }\n\n    changeProjectList(userProjects: project[]) {\n        this.userProjectList.next(userProjects);\n    }\n\n    changeLoginStatus(loggedInStatus: boolean) {\n        this.userLoggedIn.next(loggedInStatus);\n    }\n\n    changeRegionalToken(userRToken: Response) {\n        this.userRegionalToken.next(userRToken);\n    }\n\n    changeGlobalToken(userGToken: Response) {\n        this.userGlobalToken.next(userGToken);\n    }\n\n    changeProjectToken(userPToken: Response) {\n        this.userProjectToken.next(userPToken);\n    }\n\n    getKeystoneObjectList(objectType: string) {\n        // const k5token = this.k5response;\n        // //console.log('Keystone Token Details ' + JSON.stringify(this.userRegionalToken.getValue()));\n        //console.log('Keystone ObjectType Details ' + objectType);\n        const identityURL = this.utilityService.getEndpoint(this.userRegionalToken.getValue(), 'identityv3');\n        const endpointDetail = identityURL.concat(  '/',\n                                                    objectType,\n                                                    '?domain_id=',\n                                                    this.userRegionalToken.getValue().json().token.user.domain.id);\n        // With CORS Proxy Service in use here\n        const authURL = this.utilityService.sendViaCORSProxy(endpointDetail);\n\n        // retrieve the K5/OpenStack authentication token from the response header\n        const token = this.userRegionalToken.getValue().headers.get('x-subject-token');\n        //console.log('Getting KeystoneObject List' + JSON.stringify(authURL));\n\n        const postheaders: Headers = new Headers();\n        postheaders.append('Content-Type', 'application/json');\n        postheaders.append('Accept', 'application/json');\n        postheaders.append('X-Auth-Token', token);\n\n        const postopts: RequestOptions = new RequestOptions();\n        postopts.headers = postheaders;\n\n        return this.http.get(authURL, postopts)\n            .map((res: Response) => {\n                // //console.log(' Map ObjectList => ' + JSON.stringify(res));\n                return res;\n             });\n\n    }\n\n    getProjectScopedToken(projectId: string) {\n\n        // const k5token = this.k5response;\n        //console.log('New Scoped Project Pre-Response');\n        //console.log(this.userRegionalToken.getValue());\n        const identityURL = this.utilityService.getEndpoint(this.userRegionalToken.getValue(), 'identityv3');\n        const endpointDetail = identityURL.concat('/auth/tokens');\n        // With CORS Proxy Service in use here\n        const authURL = this.utilityService.sendViaCORSProxy(endpointDetail);\n\n        const body = { 'auth':\n                        { 'identity':\n                            { 'methods':\n                                [ 'token'],\n                                'token':\n                                    { 'id': this.userRegionalToken.getValue().headers.get('x-subject-token') }\n                            }, 'scope':\n                                    { 'project':\n                                        { 'id': projectId  }\n                                         }\n                                     }\n                                 };\n\n        const bodyString = JSON.stringify(body); // Stringify payload\n\n        const postheaders: Headers = new Headers();\n        postheaders.append('Content-Type', 'application/json');\n        postheaders.append('Accept', 'application/json');\n\n        const postopts: RequestOptions = new RequestOptions();\n        postopts.headers = postheaders;\n\n        return this.http.post(authURL, bodyString, postopts)\n            .map((res: any) => {\n                // const projectToken = new ProjectToken();\n\n                // retrieve the K5/OpenStack authentication token from the response header\n                // projectToken.scopedToken = res.headers.get('x-subject-token');\n                // projectToken.projectId = projectId;\n                // console.log('New Project Scoped Token response ->');\n                // console.log(res);\n\n                this.changeProjectToken(res);\n                //this.ipsecvpnService.ipsecPolicyCreate(res, 'freddy', 'esp', 'sha1', 'aes-256', 'tunnel', 'group5', 3600, 'uk-1a');\n                // console.log('Return Policy Below');\n                // console.log(policy);\n                //this.ipsecvpnService.ipsecPolicyUpdate(res, '23674bf7-6638-47e4-890f-324ed21fcf13', 'freddy', 'aes-256', 'group5', 3600, 'updated ipsec policy');\n                this.ipsecvpnService.ipsecPoliciesList(res);\n                this.ipsecvpnService.ipsecSiteConnectionsList(res);\n                this.ipsecvpnService.ikePoliciesList(res);\n                this.ipsecvpnService.vpnServicesList(res);\n                //this.ipsecvpnService.ipsecPolicyShow(res, '23674bf7-6638-47e4-890f-324ed21fcf13');\n                //this.ipsecvpnService.ipsecPolicyDelete(res, '23674bf7-6638-47e4-890f-324ed21fcf13');\n                //this.ipsecvpnService.ipsecPolicyShow(res, '23674bf7-6638-47e4-890f-324ed21fcf13');\n \n                this.cloudvisualisedService.resetNodeList();\n                this.computeService.getServerList(res);\n                this.stackService.getStackList(res);\n                this.loadBalancerService.getLBaaSDetailOrList(res, 'all');\n                this.networkService.getPortList(res);\n                this.networkService.getSubnetList(res);\n                this.networkService.getNetworkList(res);\n                this.networkService.getRouterList(res);\n                this.getRoleAssignments().subscribe();\n                \n                //console.log('New Project Scoped Token observable ->');\n                //console.log(this.userProjectToken.getValue());\n                // //console.log('New Server List ->');\n                // //console.log(this.servers.getValue());\n\n                return res;\n            });\n            \n\n    }\n\n\n    getProjectList() {\n\n        // const k5token = this.k5response;\n        // //console.log(this.currentProject);\n        const identityURL = this.utilityService.getEndpoint(this.userRegionalToken.getValue(), 'identityv3');\n        // role_assignments?scope.project.id={project_id}\n        const endpointDetail = identityURL.concat('/users/', this.userRegionalToken.getValue().json().token.user.id, '/projects');\n        \n        //console.log(endpointDetail);\n        // With CORS Proxy Service in use here\n        const authURL = this.utilityService.sendViaCORSProxy(endpointDetail);\n        //console.log(authURL);\n\n        // retrieve the K5/OpenStack authentication token from the response header\n        const token = this.userRegionalToken.getValue().headers.get('x-subject-token');\n        //console.log('Getting Project List');\n\n        const postheaders: Headers = new Headers();\n        postheaders.append('Content-Type', 'application/json');\n        postheaders.append('Accept', 'application/json');\n        postheaders.append('X-Auth-Token', token);\n\n        const postopts: RequestOptions = new RequestOptions();\n        postopts.headers = postheaders;\n\n        return this.http.get(authURL, postopts)\n            .map((res: Response) => {\n\n\n\n                    this.changeProjectList(res.json().projects);\n                    this.changeProject(res.json().projects[0]);\n                    //console.log('111111111. Get Project List with projects and actual project as follows: ');\n                    //console.log('All Unparsed Projects');\n                    // //console.log(res);\n                    // //console.log(res.json());\n                    // //console.log(res.json().projects);\n                    //console.log(this.userProjectList.getValue());\n                    //console.log(this.selectedProject.getValue().name);\n                    // return res.json().projects as projects;\n                    // return projects;\n            });\n\n\n\n    }\n    getUserInfo(user) {\n        \n                // const k5token = this.k5response;\n                // //console.log(this.currentProject);\n                const identityURL = this.utilityService.getEndpoint(this.userProjectToken.getValue(), 'identityv3');\n                const endpointDetail = identityURL.concat('/users/', user.id);\n        \n                //console.log(endpointDetail);\n                // With CORS Proxy Service in use here\n                const authURL = this.utilityService.sendViaCORSProxy(endpointDetail);\n                \n        \n                // retrieve the K5/OpenStack authentication token from the response header\n                const token = this.userProjectToken.getValue().headers.get('x-subject-token');\n                \n        \n                const postheaders: Headers = new Headers();\n                postheaders.append('Content-Type', 'application/json');\n                postheaders.append('Accept', 'application/json');\n                postheaders.append('X-Auth-Token', token);\n        \n                const postopts: RequestOptions = new RequestOptions();\n                postopts.headers = postheaders;\n\n        \n                return this.http.get(authURL, postopts)\n                    // .map((res: Response) => {\n\n\n                    //         // return res.json().projects as projects;\n                    //         // return projects;\n                    // })\n                    .subscribe(\n                            res => {\n                                console.log('Getting User Info via API');\n                                console.log(this.userProjectToken.getValue());\n                                // console.log(authURL);\n                                // console.log(postopts);\n                                // console.log(postheaders);\n                                // console.log('New User Info' + JSON.stringify(res));\n                                // console.log(res.json());\n                                // console.log(res);\n                            }\n                                ,\n                            err => console.log(err),\n                            () => console.log('Getting User Info via API Complete'));\n        \n    }\n\n    getRoleAssignments() {\n        \n                // const k5token = this.k5response;\n                // //console.log(this.currentProject);\n                const identityURL = this.utilityService.getEndpoint(this.userProjectToken.getValue(), 'identityv3');\n                const endpointDetail = identityURL.concat('/role_assignments?scope.project.id=',\n                this.userProjectToken.getValue().json().token.project.id,\n                '&include_names');\n        \n                //console.log(endpointDetail);\n                // With CORS Proxy Service in use here\n                const authURL = this.utilityService.sendViaCORSProxy(endpointDetail);\n                //console.log(authURL);\n        \n                // retrieve the K5/OpenStack authentication token from the response header\n                const token = this.userProjectToken.getValue().headers.get('x-subject-token');\n                //console.log('Getting Role Assignments');\n        \n                const postheaders: Headers = new Headers();\n                postheaders.append('Content-Type', 'application/json');\n                postheaders.append('Accept', 'application/json');\n                postheaders.append('X-Auth-Token', token);\n        \n                const postopts: RequestOptions = new RequestOptions();\n                postopts.headers = postheaders;\n        \n                return this.http.get(authURL, postopts)\n                    .map((res: Response) => {\n                            //console.log('New Role Assignments' + JSON.stringify(res));\n                            this.changeRoleAssignments(res.json().role_assignments);\n                            //console.log(this.userProjectList.getValue());\n                            //console.log(this.selectedProject.getValue().name);\n                            // return res.json().projects as projects;\n                            // return projects;\n                    });\n                    // .subscribe(\n                    //         data => console.log(data),\n                    //         err => console.log(err),\n                    //         () => console.log('Role Assignments Complete'));\n        \n    }\n\n    getUsersInGroup(group) {\n                //console.log(group.group.id);\n                // const k5token = this.k5response;\n                // //console.log(this.currentProject);\n                const identityURL = this.utilityService.getEndpoint(this.userProjectToken.getValue(), 'identityv3');\n                const endpointDetail = identityURL.concat('/groups/', group.group.id, '/users');\n        \n                //console.log(endpointDetail);\n                // With CORS Proxy Service in use here\n                const authURL = this.utilityService.sendViaCORSProxy(endpointDetail);\n                //console.log(authURL);\n        \n                // retrieve the K5/OpenStack authentication token from the response header\n                const token = this.userProjectToken.getValue().headers.get('x-subject-token');\n                //console.log('Getting Users in Group');\n        \n                const postheaders: Headers = new Headers();\n                postheaders.append('Content-Type', 'application/json');\n                postheaders.append('Accept', 'application/json');\n                postheaders.append('X-Auth-Token', token);\n        \n                const postopts: RequestOptions = new RequestOptions();\n                postopts.headers = postheaders;\n        \n                return this.http.get(authURL, postopts)\n                    .map((res: Response) => {\n                            //console.log('New Group User List' + JSON.stringify(res));\n                            this.changeUsersInGroup(res.json().users);\n                            //console.log(this.usersInGroupList.getValue());\n                            \n                            // return res.json().projects as projects;\n                            // return projects;\n                    })\n                    .subscribe(\n                            data => console.log(data),\n                            err => console.log(err),\n                            () => console.log('Group Roles Complete'));\n        \n    }    \n\n    // Get unscoped K5 global token\n    getCentralPortalToken(username: string, password: string, contract: string) {\n        // Without CORS Proxy Service in use\n        const identityURL = 'https://auth-api.jp-east-1.paas.cloud.global.fujitsu.com/API/paas/auth/token';\n        // With CORS Proxy Service in use here\n        const authURL = this.utilityService.sendViaCORSProxy(identityURL);\n\n        const body = {'auth':\n                        {'identity':\n                            {'password':\n                                {'user':\n                                   {'contract_number': contract,\n                                    'name': username,\n                                    'password': password\n                                           }}}}};\n\n        const bodyString = JSON.stringify(body); // Stringify payload\n\n        const postheaders: Headers = new Headers();\n        postheaders.append('Content-Type', 'application/json');\n        postheaders.append('Accept', 'application/json');\n\n        const postopts: RequestOptions = new RequestOptions();\n        postopts.headers = postheaders;\n\n        return this.http.post(authURL, bodyString, postopts)\n            .map((gres: Response) => {\n\n                this.changeGlobalToken(gres);\n                // this.k5Globalresponse = gres;\n                // retrieve the K5/OpenStack authentication token from the response header\n                // this.user.globalToken = gres.headers.get('X-Access-Token');\n                console.log('Central Portal Token => \\n');\n                console.log(this.userGlobalToken.getValue().json());\n\n           });\n\n\n\n    }\n\n\n\n    // Get unscoped K5 regional token\n    login(username: string, password: string, contract: string, region: string) {\n        // Without CORS Proxy Service in use\n        const identityURL = 'https://identity.'.concat(region, '.cloud.global.fujitsu.com/v3/auth/tokens');\n        // With CORS Proxy Service in use here\n        const authURL = this.utilityService.sendViaCORSProxy(identityURL);\n\n        const body = {'auth':\n                        {'identity':\n                                {'methods': ['password'], 'password':\n                                {'user':\n                                    {'domain':\n                                            {'name': contract},\n                                             'name': username,\n                                             'password': password\n                                            }}}}};\n\n        const bodyString = JSON.stringify(body); // Stringify payload\n\n        const postheaders: Headers = new Headers();\n        postheaders.append('Content-Type', 'application/json');\n        postheaders.append('Accept', 'application/json');\n\n        const postopts: RequestOptions = new RequestOptions();\n        postopts.headers = postheaders;\n\n        return this.http.post(authURL, bodyString, postopts)\n            .map((res: Response) => {\n\n                this.changeRegionalToken(res);\n                this.changeLoginStatus(true);\n                this.changeAZList([region + 'a', region + 'b']);\n                this.changeAZ(region + 'b');\n                console.log('New AZs');\n                console.log(this.availabilityZoneList.getValue());\n                console.log('Default AZone');\n                console.log(this.currentAvailabilityZone.getValue());\n                \n\n                // retrieve Global token\n                this.getCentralPortalToken(username, password, contract).subscribe();\n\n\n                this.getKeystoneObjectList('projects').subscribe(projects => this.changeContractProjects(projects.json().projects));\n                this.getKeystoneObjectList('users').subscribe(users => this.changeContractUsers(users.json().users));\n                this.getKeystoneObjectList('roles').subscribe(roles => this.changeContractRoles(roles.json().roles));\n                this.getKeystoneObjectList('groups').subscribe(groups => this.changeContractGroups(groups.json().groups));\n                \n                this.getProjectList().subscribe();\n\n\n            });\n\n\n\n    }\n\n\n    logout() {\n        this.changeLoginStatus(false);\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/identity.service.ts","import { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Injectable } from '@angular/core';\nimport { UtilityService } from '../services/utility.service';\nimport { Http, RequestMethod, Request, Headers, Response, RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n\n@Injectable()\nexport class IpsecvpnService {\n\n  private listIpsecPolicies = new BehaviorSubject<any>(null);\n  ipsecPolicies = this.listIpsecPolicies.asObservable();\n\n  private currentIpsecPolicy = new BehaviorSubject<any>(null);\n  ipsecPolicy = this.currentIpsecPolicy.asObservable();\n\n  private listIkePolicies = new BehaviorSubject<any>(null);\n  ikePolicies = this.listIkePolicies.asObservable();\n\n  private currentIkePolicy = new BehaviorSubject<any>(null);\n  ikePolicy = this.currentIkePolicy.asObservable();\n\n  private listVpnServices = new BehaviorSubject<any>(null);\n  vpnServices = this.listVpnServices.asObservable();\n\n  private currentVpnService = new BehaviorSubject<any>(null);\n  vpnService = this.currentVpnService.asObservable();\n\n  private listIpsecConnections = new BehaviorSubject<any>(null);\n  ipsecConnections = this.listIpsecConnections.asObservable();\n\n  private currentIpsecConnection = new BehaviorSubject<any>(null);\n  ipsecConnection = this.currentIpsecConnection.asObservable();\n\n  constructor(  private http: Http,\n                private utilitiesService: UtilityService) { }\n\n  changeIpsecPolicies(policies: any) {\n                  this.listIpsecPolicies.next(policies);\n  }\n\n  changeIpsecPolicy(policy: any) {\n                this.currentIpsecPolicy.next(policy);\n  }\n\n  changeIkePolicies(policies: any) {\n    this.listIkePolicies.next(policies);\n  }\n\n  changeIkePolicy(policy: any) {\n    this.currentIkePolicy.next(policy);\n  }\n\n  changeVpnServices(services: any) {\n    this.listVpnServices.next(services);\n  }\n\n  changeVpnService(service: any) {\n    this.currentVpnService.next(service);\n  }\n\n  changeIpsecConnections(connections: any) {\n    this.listIpsecConnections.next(connections);\n  }\n\n  changeIpsecConnection(connection: any) {\n    this.currentIpsecConnection.next(connection);\n  }\n\n  setRequestHeaders(k5token: any) {\n\n    const requestHeaders: Headers = new Headers();\n    requestHeaders.append('Content-Type', 'application/json');\n    requestHeaders.append('Accept', 'application/json');\n    requestHeaders.append('X-Auth-Token', k5token.headers.get('x-subject-token'));\n\n    const headeropts: RequestOptions = new RequestOptions();\n    headeropts.headers = requestHeaders;\n\n    return headeropts;\n\n  }\n\n  ipsecPoliciesList(k5token) {\n\n    let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n    vpnURL = vpnURL.concat('/v2.0/vpn/ipsecpolicies');\n    // With CORS Proxy Service in use here\n    const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n    const headeropts = this.setRequestHeaders(k5token);\n\n    return this.http.get(proxiedURL, headeropts)\n      .map((response: Response) => {\n            response.json();\n            console.log('List IPSEC VPNs');\n            console.log(response.json());\n            this.changeIpsecPolicies(response.json());\n            return response.json(); })\n      .subscribe(\n              data => console.log(data),\n              err => console.log(err),\n              () => console.log('IPSEC VPN List Success'));\n  }\n\n  ipsecPolicyShow(k5token, policyId) {\n    \n    let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n    vpnURL = vpnURL.concat('/v2.0/vpn/ipsecpolicies/', policyId);\n    // With CORS Proxy Service in use here\n    const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n    const headeropts = this.setRequestHeaders(k5token);\n    \n        return this.http.get(proxiedURL, headeropts)\n          .map((response: Response) => {\n                response.json();\n                console.log('IPSEC Policy Show');\n                console.log(response.json()); \n                return response.json(); })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('IPSEC Policy Show Success'));\n    }\n\n    ipsecPolicyCreate(k5token, name, desc, protocol, auth_alg, enc_alg, encapmode, pfsgroup,  ipseclt, az) {\n\n      let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n      vpnURL = vpnURL.concat('/v2.0/vpn/ipsecpolicies');\n      // With CORS Proxy Service in use here\n      const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n      const headeropts = this.setRequestHeaders(k5token);\n\n      const body = {\n        'ipsecpolicy': {\n            'name': name,\n            'description': desc,\n            'transform_protocol': protocol,\n            'auth_algorithm': auth_alg,\n            'encapsulation_mode': encapmode,\n            'encryption_algorithm': enc_alg,\n            'pfs': pfsgroup,\n            'lifetime': {\n                'units': 'seconds',\n                'value': ipseclt},\n            'availability_zone': az\n        }\n    };\n\n    const bodyString = JSON.stringify(body); // Stringify payload\n\n      return this.http.post(proxiedURL, bodyString, headeropts)\n        .map((response: Response) => {\n              console.log('IPSEC Policy Creation');\n              console.log(response.json());\n              this.ipsecPoliciesList(k5token);\n              this.changeIpsecPolicy(response.json());\n              return response.json(); })\n        .subscribe(\n                data => console.log(data),\n                err => console.log(err),\n                () => console.log('IPSEC Policy Create Success'));\n    }\n\n    ipsecPolicyUpdate(k5token, policyId, name, enc_alg, pfsgroup, ipseclt, description) {\n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/ipsecpolicies/', policyId);\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n        const headeropts = this.setRequestHeaders(k5token);\n\n        const body = {\n          'ipsecpolicy': {\n              'name': name,\n              'encryption_algorithm': enc_alg,\n              'pfs': pfsgroup,\n              'lifetime': {\n                  'units': 'seconds',\n                  'value': ipseclt},\n              'description': description\n          }\n      };\n\n      const bodyString = JSON.stringify(body); // Stringify payload\n\n        return this.http.put(proxiedURL, bodyString, headeropts)\n          .map((response: Response) => {\n                response.json();\n                console.log('IPSEC Policy Update');\n                console.log(response.json());\n                this.ipsecPoliciesList(k5token);\n                this.changeIpsecPolicy(response.json());\n                return response.json(); })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('IPSEC Policy Update Success'));\n      }\n\n      ipsecPolicyDelete(k5token, policyId) {\n        \n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/ipsecpolicies/', policyId);\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n    \n        const headeropts = this.setRequestHeaders(k5token);\n        \n            return this.http.delete(proxiedURL, headeropts)\n              .map((response: Response) => {\n                    response.json();\n                    console.log('IPSEC Delete Policy');\n                    console.log(response.json());\n                    this.ipsecPoliciesList(k5token);\n                    this.changeIpsecPolicy(null);\n                    return response.json(); })\n              .subscribe(\n                      data => console.log(data),\n                      err => console.log(err),\n                      () => console.log('IPSEC Delete Policy Success'));\n\n      }\n\n      ipsecSiteConnectionsList(k5token) {\n\n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/ipsec-site-connections');\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n        const headeropts = this.setRequestHeaders(k5token);\n\n        return this.http.get(proxiedURL, headeropts)\n          .map((response: Response) => {\n                response.json();\n                console.log('List IPSEC Site Connections');\n                console.log(response.json());\n                this.changeIpsecConnections(response.json());\n                return response.json(); })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('IPSEC Site Connections List Success'));\n\n      }\n\n      ipsecSiteConnectionShow(k5token, connectionId) {\n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/ipsec-site-connections/', connectionId);\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n        const headeropts = this.setRequestHeaders(k5token);\n\n        return this.http.get(proxiedURL, headeropts)\n        .map((response: Response) => {\n              response.json();\n              console.log('IPSEC Site Connection Show');\n              console.log(response.json()); \n              return response.json(); })\n        .subscribe(\n                data => console.log(data),\n                err => console.log(err),\n                () => console.log('IPSEC Site Connection Show Success'));\n\n      }\n\n      ipsecSiteConnectionCreate(k5token, name, desc, initiator, vpnsid, ikepid,\n                                secpid, peerid, peeradr, peercidr, psk, adminstate,\n                                dpdprotocol, dpdinterval, dpdtimeout, az) {\n\n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/ipsec-site-connections');\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n        const headeropts = this.setRequestHeaders(k5token);\n\n        const body = {\n          'ipsec_site_connection': {\n              'psk': psk,\n              'initiator': initiator,\n              'ipsecpolicy_id': secpid,\n              'admin_state_up': adminstate,\n              'peer_cidrs': peercidr,\n              'ikepolicy_id': ikepid,\n              'dpd': {\n                  'action': dpdprotocol,\n                  'interval': dpdinterval,\n                  'timeout': dpdtimeout\n              },\n              'vpnservice_id': vpnsid,\n              'peer_address': peeradr,\n              'peer_id': peerid,\n              'name': name,\n              'description': desc,\n              'availability_zone': az\n          }\n      };\n\n        const bodyString = JSON.stringify(body); // Stringify payload\n\n        return this.http.post(proxiedURL, bodyString, headeropts)\n          .map((response: Response) => {\n                console.log('IPSEC Policy Creation');\n                console.log(response.json());\n                this.changeIpsecConnection(response.json());\n                this.ipsecSiteConnectionsList(k5token);\n                return response.json(); })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('IPSEC Policy Create Success'));\n      }\n\n      ipsecSiteConnectionUpdate(k5token, connectionId, initiator, peerid, peeradr, peercidr, psk, name, desc, adminstate,\n        dpdprotocol, dpdinterval, dpdtimeout) {\n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/ipsec-site-connections/', connectionId);\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n        const headeropts = this.setRequestHeaders(k5token);\n\n        const body = {\n          'ipsec_site_connection': {\n              'psk': psk,\n              'initiator': initiator,\n              'admin_state_up': adminstate,\n              'peer_cidrs': peercidr,\n              'dpd': {\n                  'action': dpdprotocol,\n                  'interval': dpdinterval,\n                  'timeout': dpdtimeout\n              },\n              'peer_address': peeradr,\n              'peer_id': peerid,\n              'name': name,\n              'description': desc\n          }\n      };\n\n        const bodyString = JSON.stringify(body); // Stringify payload\n\n        return this.http.put(proxiedURL, bodyString, headeropts)\n          .map((response: Response) => {\n                console.log('IPSEC Policy Creation');\n                console.log(response.json());\n                this.changeIpsecConnection(response.json());\n                this.ipsecSiteConnectionsList(k5token);\n                return response.json(); })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('IPSEC Policy Create Success'));\n      }\n\n      ipsecSiteConnectionDelete(k5token, connectionId) {\n        \n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/ipsec-site-connections/', connectionId);\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n        const headeropts = this.setRequestHeaders(k5token);\n\n        return this.http.delete(proxiedURL, headeropts)\n        .map((response: Response) => {\n              response.json();\n              console.log('IPSEC Site Connection Delete');\n              console.log(response.json());\n              this.changeIpsecConnection(null);\n              this.ipsecSiteConnectionsList(k5token);\n              return response.json(); })\n        .subscribe(\n                data => console.log(data),\n                err => console.log(err),\n                () => console.log('IPSEC Site Connection Delete Success'));\n\n      }\n\n      vpnServicesList(k5token) {\n\n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/vpnservices');\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n        const headeropts = this.setRequestHeaders(k5token);\n\n        return this.http.get(proxiedURL, headeropts)\n          .map((response: Response) => {\n                response.json();\n                console.log('List IPSEC VPN Services');\n                console.log(response.json());\n                this.changeVpnServices(response.json());\n                return response.json(); })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('IPSEC VPN Services List Success'));\n\n      }\n\n      vpnServiceShow(k5token, serviceId) {\n        \n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/vpnservices/', serviceId);\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n        const headeropts = this.setRequestHeaders(k5token);\n\n        return this.http.get(proxiedURL, headeropts)\n        .map((response: Response) => {\n              response.json();\n              console.log('IPSEC VPN Service Show');\n              console.log(response.json());\n              this.changeVpnService(response.json());\n              return response.json(); })\n        .subscribe(\n                data => console.log(data),\n                err => console.log(err),\n                () => console.log('IPSEC VPN Service Show Success'));\n      }\n\n      vpnServiceCreate(k5token, name, desc, routerid, subnetid, az) {\n\n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/vpnservices');\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n        const headeropts = this.setRequestHeaders(k5token);\n\n        const body = {\n          'vpnservice': {\n              'subnet_id': subnetid,\n              'router_id': routerid,\n              'name': name,\n              'description': desc,\n              'admin_state_up': true,\n              'availability_zone': az\n          }\n        };\n\n        const bodyString = JSON.stringify(body); // Stringify payload\n\n        return this.http.post(proxiedURL, bodyString, headeropts)\n          .map((response: Response) => {\n                console.log('IPSEC VPN Service Creation');\n                console.log(response.json());\n                this.vpnServicesList(k5token);\n                this.changeVpnService(response.json());\n                return response.json(); })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('IPSEC VPN Service Create Success'));\n      }\n\n      vpnServiceUpdate(k5token, serviceId, name, adminState, desc) {\n\n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/vpnservices/', serviceId);\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n        const headeropts = this.setRequestHeaders(k5token);\n\n        const body = {\n          'vpnservice': {\n              'name': name,\n              'admin_state_up': adminState,\n              'description': desc\n          }\n        };\n\n        const bodyString = JSON.stringify(body); // Stringify payload\n\n        return this.http.put(proxiedURL, bodyString, headeropts)\n          .map((response: Response) => {\n                console.log('IPSEC VPN Service Update');\n                console.log(response.json());\n                this.vpnServicesList(k5token);\n                this.changeVpnService(response.json());\n                return response.json(); })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('IPSEC VPN Service Update Success'));\n\n      }\n\n      vpnServiceDelete(k5token, serviceId) {\n                \n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/vpnservices/', serviceId);\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n        const headeropts = this.setRequestHeaders(k5token);\n\n        return this.http.delete(proxiedURL, headeropts)\n        .map((response: Response) => {\n              response.json();\n              console.log('IPSEC VPN Service Deletion');\n              console.log(response.json());\n              this.vpnServicesList(k5token);\n              this.changeVpnService(null);\n              return response.json(); })\n        .subscribe(\n                data => console.log(data),\n                err => console.log(err),\n                () => console.log('IPSEC VPN Service Delete Success'));\n\n      }\n\n      ikePoliciesList(k5token) { \n\n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/ikepolicies');\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n    \n        const headeropts = this.setRequestHeaders(k5token);\n    \n        return this.http.get(proxiedURL, headeropts)\n          .map((response: Response) => {\n                response.json();\n                console.log('List IKE Policies');\n                console.log(response.json());\n                this.changeIkePolicies(response.json());\n                return response.json(); })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('IKE Policies List Success'));\n\n      }\n\n      ikePolicyShow(k5token, policyId) {\n        \n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/ikepolicies/', policyId);\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n    \n        const headeropts = this.setRequestHeaders(k5token);\n        \n            return this.http.get(proxiedURL, headeropts)\n              .map((response: Response) => {\n                    response.json();\n                    console.log('IKE Policy Show');\n                    console.log(response.json());\n                    this.changeIkePolicy(response.json());\n                    return response.json(); })\n              .subscribe(\n                      data => console.log(data),\n                      err => console.log(err),\n                      () => console.log('IKE Policy Show Success'));\n\n      }\n\n      ikePolicyDelete(k5token, policyId) {\n                \n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/ikepolicies/', policyId);\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n    \n        const headeropts = this.setRequestHeaders(k5token);\n        \n            return this.http.delete(proxiedURL, headeropts)\n              .map((response: Response) => {\n                    response.json();\n                    console.log('IKE Policy Deletion');\n                    console.log(response.json());\n                    this.ikePoliciesList(k5token);\n                    this.changeIkePolicy(null);\n                    return response.json(); })\n              .subscribe(\n                      data => console.log(data),\n                      err => console.log(err),\n                      () => console.log('IKE Policy Deletion Success'));\n\n      }\n\n      ikePolicyCreate(k5token, name, desc, authalg, encryalg, ikelt, ikev, pfs, neg, az) {\n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/ikepolicies');\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n        const headeropts = this.setRequestHeaders(k5token);\n\n        const body = {\n          'ikepolicy': {\n              'phase1_negotiation_mode': neg,\n              'auth_algorithm': authalg,\n              'encryption_algorithm': encryalg,\n              'pfs': pfs,\n              'lifetime': {\n                  'units': 'seconds',\n                  'value': ikelt\n              },\n              'ike_version': ikev,\n              'name': name,\n              'description': desc,\n              'availability_zone': az\n          }\n      };\n\n        const bodyString = JSON.stringify(body); // Stringify payload\n\n        return this.http.post(proxiedURL, bodyString, headeropts)\n          .map((response: Response) => {\n                console.log('IKE Policy Creation');\n                console.log(response.json());\n                this.ikePoliciesList(k5token);\n                this.changeIkePolicy(response.json());\n                return response.json(); })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('IKE Policy Create Success'));\n      }\n\n      ikePolicyUpdate(k5token, policyId, name, encryalg, ikelt, pfs, desc) {\n\n        let vpnURL = this.utilitiesService.getEndpoint(k5token, 'networking');\n        vpnURL = vpnURL.concat('/v2.0/vpn/ikepolicies/', policyId);\n        // With CORS Proxy Service in use here\n        const proxiedURL = this.utilitiesService.sendViaCORSProxy(vpnURL);\n\n        const headeropts = this.setRequestHeaders(k5token);\n\n        const body = {\n          'ikepolicy': {\n              'encryption_algorithm': encryalg,\n              'pfs': pfs,\n              'lifetime': {\n                  'units': 'seconds',\n                  'value': ikelt\n              },\n              'name': name,\n              'description': desc\n          }\n      };\n\n        const bodyString = JSON.stringify(body); // Stringify payload\n\n        return this.http.put(proxiedURL, bodyString, headeropts)\n          .map((response: Response) => {\n                console.log('IKE Policy Update');\n                console.log(response.json());\n                this.ikePoliciesList(k5token);\n                this.changeIkePolicy(response.json());\n                return response.json(); })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('IKE Policy Update Success'));\n\n      }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/ipsecvpn.service.ts","import { Injectable } from '@angular/core';\nimport { CloudvisualisedService } from './cloudvisualised.service';\nimport { Http, RequestMethod, Request, Headers, Response, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n// import { User, project, projects, ProjectToken } from '../model/user';\nimport { IdentityService } from '../services/identity.service';\nimport { UtilityService } from '../services/utility.service';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class LoadbalancerService {\n\n  private userLBaaSList = new BehaviorSubject<any>(null);\n  userLBaaS = this.userLBaaSList.asObservable();\n  private userLBaaSDetails = new BehaviorSubject<any>(null);\n  LBaaSDetails = this.userLBaaSDetails.asObservable();\n  lBDetails = false;\n\n  constructor(private http: Http,\n    private utilitiesService: UtilityService,\n    private cloudvisualisedService: CloudvisualisedService) { }\n\n  changeLBaaSDetails(LBaaSDetails: any) {\n    this.userLBaaSDetails.next(LBaaSDetails);\n  }\n\n  changeLBaaSList(userLBaaS: any) {\n    this.userLBaaSList.next(userLBaaS);\n    if (userLBaaS != null) {\n      this.cloudvisualisedService.getNodes('lbaas', userLBaaS);\n    }\n  }\n\n  // set LBaaSName to 'all' to retrieve all LBaaS associated with scoped token\n  // otherwise provide the name of an existing LBaaS to get it's details\n  getLBaaSDetailOrList(k5scopedtoken: any, LBaaSName: string) {\n      // //console.log('lbaas token');\n      // //console.log(k5scopedtoken);\n\n      let lbaasURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'loadbalancing');\n\n      if (LBaaSName === 'all') {\n        lbaasURL = lbaasURL.concat('/?Version=2014-11-01&Action=DescribeLoadBalancers');\n        this.lBDetails = false;\n      } else {\n        //console.log('Get LBAAS Detail rather than ALL')\n        lbaasURL = lbaasURL.concat('/?LoadBalancerNames.member.1=', LBaaSName, '&Version=2014-11-01&Action=DescribeLoadBalancers');\n        this.lBDetails = true;\n      }\n\n      // With CORS Proxy Service in use here\n      const proxiedURL = this.utilitiesService.sendViaCORSProxy(lbaasURL);\n\n      const getheaders: Headers = new Headers();\n      getheaders.append('Content-Type', 'application/json');\n      getheaders.append('Accept', 'application/json');\n      getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n      const headeropts: RequestOptions = new RequestOptions();\n      headeropts.headers = getheaders;\n\n      return this.http.get(proxiedURL, headeropts)\n          .map((res: any) => {\n              //console.log('New LBaaS List ->');\n              //console.log(res.json().DescribeLoadBalancersResponse.DescribeLoadBalancersResult.LoadBalancerDescriptions.member);\n              if (this.lBDetails) {\n                this.changeLBaaSDetails(res.json().DescribeLoadBalancersResponse.DescribeLoadBalancersResult.LoadBalancerDescriptions.member);\n              } else {\n                this.changeLBaaSList(res.json().DescribeLoadBalancersResponse.DescribeLoadBalancersResult.LoadBalancerDescriptions.member);\n              }\n\n\n              return res.json().DescribeLoadBalancersResponse.DescribeLoadBalancersResult.LoadBalancerDescriptions.member;\n              })\n          .subscribe(\n                  (res) => console.log(res),\n                  (err) => console.log(err),\n                  () => console.log('Finished LBaaS List or Details Observable'));\n\n  }\n\n      deleteLBaaS(k5scopedtoken: any, LBaaSName: string) {\n          let lbaasURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'loadbalancing');\n\n          lbaasURL = lbaasURL.concat('/?LoadBalancerName=', LBaaSName, '&Version=2014-11-01&Action=DeleteLoadBalancer');\n\n    \n          // With CORS Proxy Service in use here\n          const proxiedURL = this.utilitiesService.sendViaCORSProxy(lbaasURL);\n    \n          const getheaders: Headers = new Headers();\n          getheaders.append('Content-Type', 'application/json');\n          getheaders.append('Accept', 'application/json');\n          getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n    \n          const headeropts: RequestOptions = new RequestOptions();\n          headeropts.headers = getheaders;\n    \n          return this.http.get(proxiedURL, headeropts)\n              .map((res: any) => {\n                  //console.log('LBaaS Deleted');\n                  //console.log(res.json());\n    \n    \n                  return res.json();\n                  })\n              .subscribe(\n                      (res) => console.log(res),\n                      (err) => console.log(err),\n                      () => console.log('Finished LBaaS Deletion'));\n    \n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/loadbalancer.service.ts","import { CloudvisualisedService } from './cloudvisualised.service';\nimport { Injectable} from '@angular/core';\nimport { Http, RequestMethod, Request, Headers, Response, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { User, project, projects, ProjectToken } from '../model/user';\nimport { IdentityService } from '../services/identity.service';\nimport { UtilityService } from '../services/utility.service';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class NetworkService {\n\n  private userRouterList = new BehaviorSubject<any>(null);\n  userRouters = this.userRouterList.asObservable();\n  private userRouterDetails = new BehaviorSubject<any>(null);\n  routerDetails = this.userRouterDetails.asObservable();\n\n  private userNetworkList = new BehaviorSubject<any>(null);\n  userNetworks = this.userNetworkList.asObservable();\n  private userNetworkDetails = new BehaviorSubject<any>(null);\n  networkDetails = this.userNetworkDetails.asObservable();\n\n  private userSubNetworkList = new BehaviorSubject<any>(null);\n  userSubNetworks = this.userSubNetworkList.asObservable();\n  private userSubNetworkDetails = new BehaviorSubject<any>(null);\n  subNetworkDetails = this.userSubNetworkDetails.asObservable();\n\n  private userPortList = new BehaviorSubject<any>(null);\n  userPorts = this.userPortList.asObservable();\n  private userPortDetails = new BehaviorSubject<any>(null);\n  subPortDetails = this.userPortDetails.asObservable();\n\n  private userRouterStatus = new BehaviorSubject<any>(null);\n  routerStatus = this.userRouterStatus.asObservable();\n\n  constructor(private http: Http,\n              private utilitiesService: UtilityService,\n              private cloudvisualisedService: CloudvisualisedService) { }\n\n  changeRouterList(userRouters: any) {\n      this.userRouterList.next(userRouters);\n      this.cloudvisualisedService.getNodes('router', userRouters);\n  }\n\n  changeRouterDetails(routerDetails: any) {\n      this.userRouterDetails.next(routerDetails);\n  }\n\n  changeRouterStatus(routerUpdateStatus: any) {\n    this.userRouterStatus.next(routerUpdateStatus);\n}\n\n  changeNetworkList(userNetworks: any) {\n    this.userNetworkList.next(userNetworks);\n    this.cloudvisualisedService.getNodes('network', userNetworks);\n  }\n\n  changeNetworkDetails(NetworkDetails: any) {\n      this.userNetworkDetails.next(NetworkDetails);\n  }\n\n  changeSubNetworkList(userSubNetworks: any) {\n    this.userSubNetworkList.next(userSubNetworks);\n    this.cloudvisualisedService.getNodes('subnetwork', userSubNetworks);\n  }\n\n  changeSubNetworkDetails(SubNetworkDetails: any) {\n      this.userSubNetworkDetails.next(SubNetworkDetails);\n  }\n\n  changePortList(userPorts: any) {\n    this.userPortList.next(userPorts);\n    this.cloudvisualisedService.getNodes('port', userPorts);\n  }\n\n  changePortDetails(PortDetails: any) {\n      this.userPortDetails.next(PortDetails);\n  }\n\n  updateRouterRoutes(k5scopedtoken: any, router: any, newRoutes: any) {\n\n    let networkURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'networking');\n    networkURL = networkURL.concat('/v2.0/routers/', router.id);\n    // With CORS Proxy Service in use here\n    const proxiedURL = this.utilitiesService.sendViaCORSProxy(networkURL);\n\n    newRoutes = JSON.parse(newRoutes);\n\n    // if (!replace) {\n    //     console.log('Before route change');\n    //     console.log(newRoutes);\n    //     console.log('Existing routes');\n    //     console.log(router.routes);\n    //     console.log(router);\n\n    //     newRoutes.concat(router.routes);\n    //     console.log('After route change');\n    //     console.log(newRoutes);\n    // }\n\n    const body = {'router': {'routes': newRoutes}};\n\n    console.log(body);\n\n    const bodyString = JSON.stringify(body); // Stringify payload\n\n    const putheaders: Headers = new Headers();\n    putheaders.append('Content-Type', 'application/json');\n    putheaders.append('Accept', 'application/json');\n    putheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n    const headeropts: RequestOptions = new RequestOptions();\n    headeropts.headers = putheaders;\n\n    return this.http.put(proxiedURL, bodyString, headeropts)\n        .map((res: any) => {\n            //console.log('Router details');\n            //console.log(res.json().router);\n            this.changeRouterDetails(res.json().router);\n            this.changeRouterStatus(res);\n            console.log(res.json().body);\n            console.log(res._body);\n            return res;\n            })\n        .subscribe(\n                    data => console.log(data),\n                    err => {console.log(err);\n                    this.changeRouterStatus(err); },\n                    () => console.log('Completed Router Update'));\n\n  }\n\n  getRouterList(k5scopedtoken: any) {\n\n      let networkURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'networking');\n      networkURL = networkURL.concat('/v2.0/routers');\n      // With CORS Proxy Service in use here\n      const proxiedURL = this.utilitiesService.sendViaCORSProxy(networkURL);\n\n      const getheaders: Headers = new Headers();\n      getheaders.append('Content-Type', 'application/json');\n      getheaders.append('Accept', 'application/json');\n      getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n      const headeropts: RequestOptions = new RequestOptions();\n      headeropts.headers = getheaders;\n\n      return this.http.get(proxiedURL, headeropts)\n          .map((res: any) => {\n              //console.log('New Router List ->');\n              //console.log(res.json().routers);\n              this.changeRouterList(res.json().routers);\n\n              // return res;\n              })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('Router list complete'));\n\n  }\n\n  getRouterDetails(k5scopedtoken: any, router: any) {\n\n      let networkURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'networking');\n      networkURL = networkURL.concat('/v2.0/routers/', router.id);\n      // With CORS Proxy Service in use here\n      const proxiedURL = this.utilitiesService.sendViaCORSProxy(networkURL);\n\n      const getheaders: Headers = new Headers();\n      getheaders.append('Content-Type', 'application/json');\n      getheaders.append('Accept', 'application/json');\n      getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n      const headeropts: RequestOptions = new RequestOptions();\n      headeropts.headers = getheaders;\n\n      return this.http.get(proxiedURL, headeropts)\n          .map((res: any) => {\n              //console.log('Router details');\n              //console.log(res.json().router);\n              this.changeRouterDetails(res.json().router);\n              return res;\n              })\n          .subscribe(\n                      data => console.log(data),\n                      err => console.log(err),\n                      () => console.log('Completed Router Details'));\n\n  }\n  getNetworkList(k5scopedtoken: any) {\n\n    let networkURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'networking');\n    networkURL = networkURL.concat('/v2.0/networks');\n    // With CORS Proxy Service in use here\n    const proxiedURL = this.utilitiesService.sendViaCORSProxy(networkURL);\n\n    const getheaders: Headers = new Headers();\n    getheaders.append('Content-Type', 'application/json');\n    getheaders.append('Accept', 'application/json');\n    getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n    const headeropts: RequestOptions = new RequestOptions();\n    headeropts.headers = getheaders;\n\n    return this.http.get(proxiedURL, headeropts)\n        .map((res: any) => {\n            //console.log('New network List ->');\n            //console.log(res.json().networks);\n            this.changeNetworkList(res.json().networks);\n\n            // return res;\n            })\n        .subscribe(\n                data => console.log(data),\n                err => console.log(err),\n                () => console.log('network list complete'));\n\n  }\n\n  getNetworkDetails(k5scopedtoken: any, network: any) {\n\n      let networkURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'networking');\n      networkURL = networkURL.concat('/v2.0/networks/', network.id);\n      // With CORS Proxy Service in use here\n      const proxiedURL = this.utilitiesService.sendViaCORSProxy(networkURL);\n\n      const getheaders: Headers = new Headers();\n      getheaders.append('Content-Type', 'application/json');\n      getheaders.append('Accept', 'application/json');\n      getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n      const headeropts: RequestOptions = new RequestOptions();\n      headeropts.headers = getheaders;\n\n      return this.http.get(proxiedURL, headeropts)\n          .map((res: any) => {\n              //console.log('network details');\n              //console.log(res.json().network);\n              this.changeNetworkDetails(res.json().network);\n              return res;\n              })\n          .subscribe(\n                      data => console.log(data),\n                      err => console.log(err),\n                      () => console.log('Completed network Details'));\n\n  }\n\n  getSubnetList(k5scopedtoken: any) {\n\n      let networkURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'networking');\n      networkURL = networkURL.concat('/v2.0/subnets');\n      // With CORS Proxy Service in use here\n      const proxiedURL = this.utilitiesService.sendViaCORSProxy(networkURL);\n\n      const getheaders: Headers = new Headers();\n      getheaders.append('Content-Type', 'application/json');\n      getheaders.append('Accept', 'application/json');\n      getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n      const headeropts: RequestOptions = new RequestOptions();\n      headeropts.headers = getheaders;\n\n      return this.http.get(proxiedURL, headeropts)\n          .map((res: any) => {\n              //console.log('New Subnet List ->');\n              //console.log(res.json().subnets);\n              this.changeSubNetworkList(res.json().subnets);\n\n              // return res;\n              })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('subnet list complete'));\n\n  }\n\ngetSubnetDetails(k5scopedtoken: any, subnet: any) {\n\n    let networkURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'networking');\n    networkURL = networkURL.concat('/v2.0/subnets/', subnet.id);\n    // With CORS Proxy Service in use here\n    const proxiedURL = this.utilitiesService.sendViaCORSProxy(networkURL);\n\n    const getheaders: Headers = new Headers();\n    getheaders.append('Content-Type', 'application/json');\n    getheaders.append('Accept', 'application/json');\n    getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n    const headeropts: RequestOptions = new RequestOptions();\n    headeropts.headers = getheaders;\n\n    return this.http.get(proxiedURL, headeropts)\n        .map((res: any) => {\n            //console.log('Subnet details');\n            //console.log(res.json().subnet);\n            this.changeSubNetworkDetails(res.json().subnet);\n            return res;\n            })\n        .subscribe(\n                    data => console.log(data),\n                    err => console.log(err),\n                    () => console.log('Completed Subnet Details'));\n\n  }\n\ngetPortList(k5scopedtoken: any) {\n\n      let networkURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'networking');\n      networkURL = networkURL.concat('/v2.0/ports');\n      // With CORS Proxy Service in use here\n      const proxiedURL = this.utilitiesService.sendViaCORSProxy(networkURL);\n\n      const getheaders: Headers = new Headers();\n      getheaders.append('Content-Type', 'application/json');\n      getheaders.append('Accept', 'application/json');\n      getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n      const headeropts: RequestOptions = new RequestOptions();\n      headeropts.headers = getheaders;\n\n      return this.http.get(proxiedURL, headeropts)\n          .map((res: any) => {\n              //console.log('New Port List ->');\n              //console.log(res.json().ports);\n              this.changePortList(res.json().ports);\n\n              // return res;\n              })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('port list complete'));\n\n  }\n\n  getPortDetails(k5scopedtoken: any, port: any) {\n\n      let networkURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'networking');\n      networkURL = networkURL.concat('/v2.0/ports/', port.id);\n      // With CORS Proxy Service in use here\n      const proxiedURL = this.utilitiesService.sendViaCORSProxy(networkURL);\n\n      const getheaders: Headers = new Headers();\n      getheaders.append('Content-Type', 'application/json');\n      getheaders.append('Accept', 'application/json');\n      getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n      const headeropts: RequestOptions = new RequestOptions();\n      headeropts.headers = getheaders;\n\n      return this.http.get(proxiedURL, headeropts)\n          .map((res: any) => {\n              //console.log('Port details');\n              //console.log(res.json().port);\n              this.changePortDetails(res.json().port);\n              return res;\n              })\n          .subscribe(\n                      data => console.log(data),\n                      err => console.log(err),\n                      () => console.log('Completed Port Details'));\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/network.service.ts","import { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class PasswordManagementService {\n    crypto = window.crypto;\n    encryptAlgorithm = {\n        name: \"RSA-OAEP\",\n        hash: {\n            name: \"SHA-1\"\n        }\n    };\n\n      \n    constructor() { \n      \n    }\n\n    // importPublicKey(pemKey) {\n    //     //console.log('import pem key');\n    //     //console.log(this.convertPemToBinary(pemKey));\n        \n    //     return new Promise(function(resolve) {\n    //         let importer = crypto.subtle.importKey(\"spki\", this.convertPemToBinary(pemKey), this.encryptAlgorithm, false, [\"encrypt\"]);\n    //         importer.then(function(key) { \n    //         resolve(key);\n    //         });\n    // });\n    // }\n\n    importKey(pemkey){\n        pemkey = this.convertPemToBinary(pemkey);\n        window.crypto.subtle.importKey(\n            \"pkcs8\", //can be \"jwk\" (public or private), \"spki\" (public only), or \"pkcs8\" (private only)\n            pemkey,\n            {   //these are the algorithm options\n                name: \"RSA-OAEP\",\n                hash: {name: \"SHA-256\"}, //can be \"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\"\n            },\n            false, //whether the key is extractable (i.e. can be used in exportKey)\n            [\"decrypt\"] //\"encrypt\" or \"wrapKey\" for public key import or\n                        //\"decrypt\" or \"unwrapKey\" for private key imports\n        )\n        .then(function(publicKey){\n            //returns a publicKey (or privateKey if you are importing a private key)\n\n            //console.log(publicKey);\n            return publicKey;\n        });\n    }\n\n    convertPemToBinary(pem) {\n        //console.log('convert pem key');\n        //console.log(pem);\n        let lines = pem.split('\\n');\n        let encoded = '';\n        for(let i = 0;i < lines.length;i++){\n            if (lines[i].trim().length > 0 &&\n                lines[i].indexOf('-BEGIN RSA PRIVATE KEY-') < 0 && \n                lines[i].indexOf('-BEGIN RSA PUBLIC KEY-') < 0 &&\n                lines[i].indexOf('-BEGIN PUBLIC KEY-') < 0 &&\n                lines[i].indexOf('-END PUBLIC KEY-') < 0 &&\n                lines[i].indexOf('-END RSA PRIVATE KEY-') < 0 &&\n                lines[i].indexOf('-END RSA PUBLIC KEY-') < 0) {\n            encoded += lines[i].trim();\n            }\n        }\n        //console.log('converted pem key');\n        //console.log(encoded);\n        //console.log(this.base64StringToArrayBuffer(encoded));\n        return this.base64StringToArrayBuffer(encoded);\n    }\n\n    base64StringToArrayBuffer(b64str) {\n        let byteStr = atob(b64str);\n        let bytes = new Uint8Array(byteStr.length);\n        for (var i = 0; i < byteStr.length; i++) {\n            bytes[i] = byteStr.charCodeAt(i);\n        }\n        return bytes.buffer;\n    }\n    arrayBufferToBase64String(arrayBuffer) {\n        let byteArray = new Uint8Array(arrayBuffer)\n        let byteString = '';\n        for (var i=0; i<byteArray.byteLength; i++) {\n            byteString += String.fromCharCode(byteArray[i]);\n        }\n        return btoa(byteString);\n    }\n\n    decrypt_data(private_key_object:any,encrypted_data:any) {\n        //console.log(' decrypt key debug....');\n        //console.log(private_key_object);\n        private_key_object = this.importKey(private_key_object);\n        //console.log(private_key_object);\n        //console.log(encrypted_data);\n        encrypted_data = this.base64StringToArrayBuffer(encrypted_data);\n        //console.log(encrypted_data);\n        window.crypto.subtle.decrypt(\n            {\n                name: \"RSA-OAEP\",\n                //label: Uint8Array([...]) //optional\n            },\n            private_key_object, //from generateKey or importKey above\n            encrypted_data //ArrayBuffer of the data\n            )\n            .then(function(decrypted){\n                //returns an ArrayBuffer containing the decrypted data\n                //console.log(new Uint8Array(decrypted));\n            });\n    }\n\n    // generateKeys(){\n    //     let private_key_object = null; \n    //     let public_key_object = null; \n\n    //     let promise_key = null;\n\n    //     let crypto = window.crypto;\n\n    //     if(crypto.subtle)\n    //     {\n    //         alert(\"Cryptography API Supported\");\n            \n    //         //Parameters:\n    //         //1. Asymmetric Encryption algorithm name and its requirements\n    //         //2. Boolean indicating extractable. which indicates whether or not the raw keying material may be exported by the application (http://www.w3.org/TR/WebCryptoAPI/#dfn-CryptoKey-slot-extractable)\n    //         //3. Usage of the keys. (http://www.w3.org/TR/WebCryptoAPI/#cryptokey-interface-types)\n    //         promise_key = crypto.subtle.generateKey({name: \"RSA-OAEP\", modulusLength: 2048, publicExponent: new Uint8Array([0x01, 0x00, 0x01]), hash: {name: \"SHA-256\"}}, false, [\"encrypt\", \"decrypt\"]);\n\n    //         promise_key.then(function(key){\n    //             private_key_object = key.privateKey;\n    //             public_key_object = key.publicKey;\n    //             //console.log('New Crypto Keys Start');\n    //             //console.log(private_key_object);\n    //             //console.log(public_key_object);\n    //             //console.log('New Crypto Keys End');\n\n    //         });\n\n    //         promise_key.catch = function(e){\n    //             //console.log(e.message);\n    //         }\n            \n    //     }\n    //     else\n    //     {\n    //         alert(\"Cryptography API not Supported\");\n    //     }        \n    // }\n\n \n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/password-management.service.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'removeQuotes'\n})\nexport class RemoveQuotesPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value.indexOf('\"') > -1) {\n      return value.replace (/\"/g,'');\n    } else {\n      return value;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/remove-quotes.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sortObjectsByName'\n})\nexport class SortObjectsByNamePipe implements PipeTransform {\n\n  transform(arr: any, args?: any): any {\n    if(!arr){ return; }\n    return arr.sort((a, b) => {\n        if ((a.name).toLowerCase() > (b.name).toLowerCase()) {\n          return 1;\n        }\n        if ((a.name).toLowerCase() < (b.name).toLowerCase()) {\n          return -1;\n        }\n        return 0;\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/sort-objects-by-name.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'stackSorter'\n})\nexport class StackSorterPipe implements PipeTransform {\n\n  transform(arr: any, args?: any): any {\n    if(!arr){ return; }\n    return arr.sort((a, b) => {\n        if ((a.stack_name).toLowerCase() > (b.stack_name).toLowerCase()) {\n          return 1;\n        }\n        if ((a.stack_name).toLowerCase() < (b.stack_name).toLowerCase()) {\n          return -1;\n        }\n        return 0;\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/stack-sorter.pipe.ts","import { Injectable } from '@angular/core';\nimport { Http, RequestMethod, Request, Headers, Response, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { User, project, projects, ProjectToken } from '../model/user';\nimport { IdentityService } from '../services/identity.service';\nimport { UtilityService } from '../services/utility.service';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class StackService {\n  private userStackList = new BehaviorSubject<any>(null);\n  userStacks = this.userStackList.asObservable();\n  private userStackDetails = new BehaviorSubject<any>(null);\n  stackDetails = this.userStackDetails.asObservable();\n  private userStackOutputs = new BehaviorSubject<any>(null);\n  stackOutputs = this.userStackOutputs.asObservable();\n  currentProject: project = null;\n  currentProjectToken: Response = null;\n\n  constructor(private http: Http,\n              private utilitiesService: UtilityService) { }\n\n  changeStackList(userStacks: any) {\n      this.userStackList.next(userStacks);\n  }\n\n  changeStackOutputs(stackOutputs: any) {\n    this.userStackOutputs.next(stackOutputs);\n}\n\n  changeStackDetails(stackDetails: any) {\n      this.userStackDetails.next(stackDetails);\n  }\n\n  getStackList(k5scopedtoken: any) {\n\n      let stackURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'orchestration');\n      stackURL = stackURL.concat('/stacks');\n      // With CORS Proxy Service in use here\n      const proxiedURL = this.utilitiesService.sendViaCORSProxy(stackURL);\n\n      const getheaders: Headers = new Headers();\n      getheaders.append('Content-Type', 'application/json');\n      getheaders.append('Accept', 'application/json');\n      getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n      const headeropts: RequestOptions = new RequestOptions();\n      headeropts.headers = getheaders;\n\n      return this.http.get(proxiedURL, headeropts)\n          .map((res: any) => {\n              //console.log('New Stack List ->');\n              //console.log(res.json().stacks);\n              this.changeStackList(res.json().stacks);\n\n              // return res;\n              })\n          .subscribe(\n                  data => console.log(data),\n                  err => console.log(err),\n                  () => console.log('yay'));\n\n  }\n\n  getStackDetails(k5scopedtoken: any, stack: any) {\n\n      let stackURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'orchestration');\n      stackURL = stackURL.concat('/stacks/', stack.stack_name, '/', stack.id);\n      // With CORS Proxy Service in use here\n      const proxiedURL = this.utilitiesService.sendViaCORSProxy(stackURL);\n\n      const getheaders: Headers = new Headers();\n      getheaders.append('Content-Type', 'application/json');\n      getheaders.append('Accept', 'application/json');\n      getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n      const headeropts: RequestOptions = new RequestOptions();\n      headeropts.headers = getheaders;\n\n      return this.http.get(proxiedURL, headeropts)\n          .map((res: any) => {\n              //console.log('Heat Stack Details');\n              //console.log(res.json());\n              this.changeStackDetails(res.json());\n              // added following 'hack' as the outputs API call is not currently implemented on FJ K5 IaaS\n              this.changeStackOutputs(res.json().stack.outputs);\n              // return res;\n              })\n          .subscribe(\n                      data => console.log(data),\n                      err => console.log(err),\n                      () => console.log('yay'));\n\n  }\n\n  deleteStack(k5scopedtoken, stack) {\n\n    let stackURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'orchestration');\n    stackURL = stackURL.concat('/stacks/', stack.stack.stack_name, '/', stack.stack.id);\n    // With CORS Proxy Service in use here\n    const proxiedURL = this.utilitiesService.sendViaCORSProxy(stackURL);\n\n    const getheaders: Headers = new Headers();\n    getheaders.append('Content-Type', 'application/json');\n    getheaders.append('Accept', 'application/json');\n    getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n\n    const headeropts: RequestOptions = new RequestOptions();\n    headeropts.headers = getheaders;\n\n    return this.http.delete(proxiedURL, headeropts)\n        .map((res: any) => {\n            //console.log('Delete Stack');\n            //console.log(res.json());\n            this.changeStackDetails(null);\n            // added following 'hack' as the outputs API call is not currently implemented on FJ K5 IaaS\n            this.changeStackOutputs(null);\n            return res;\n            })\n        .subscribe(\n                    data => console.log(data),\n                    err => console.log(err),\n                    () => console.log('yay'));\n\n  }\n\n  // API not currently implemented on Fujitsu K5 IaaS 12/09/2017 - Graham Land\n  // Just grab the outputs from the server details\n  getStackOutputs(k5scopedtoken: any, stack: any) {\n    \n          let stackURL = this.utilitiesService.getEndpoint(k5scopedtoken, 'orchestration');\n          stackURL = stackURL.concat('/stacks/', stack.stack_name, '/', stack.id, '/outputs');\n          // With CORS Proxy Service in use here\n          const proxiedURL = this.utilitiesService.sendViaCORSProxy(stackURL);\n    \n          const getheaders: Headers = new Headers();\n          getheaders.append('Content-Type', 'application/json');\n          getheaders.append('Accept', 'application/json');\n          getheaders.append('X-Auth-Token', k5scopedtoken.headers.get('x-subject-token'));\n    \n          const headeropts: RequestOptions = new RequestOptions();\n          headeropts.headers = getheaders;\n    \n          return this.http.get(proxiedURL, headeropts)\n              .map((res: any) => {\n                  //console.log('Heat Stack Outputs');\n                  //console.log(res.json().outputs);\n                  this.changeStackOutputs(res.json().outputs);\n                  // return res;\n                  })\n              .subscribe(\n                          data => console.log(data),\n                          err => console.log(err),\n                          () => console.log('yay'));\n    \n      }  \n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/stack.service.ts","import { Injectable } from '@angular/core';\nimport { UtilityService } from '../services/utility.service';\nimport { Http, RequestMethod, Request, Headers, Response, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n\n\n@Injectable()\nexport class UserMaintenanceService {\n\n  constructor(private http: Http,\n    private utilitiesService: UtilityService) { }\n\n    // undocumented api - just a guess\n  // listUserfromCentralPortal(k5GlobalToken: any, user: any) {\n\n  //   let centralIdUrl = 'https://k5-apiportal.paas.cloud.global.fujitsu.com/API/v1/api/users?login_id=';\n\n  //   centralIdUrl = centralIdUrl.concat(user.name);\n\n  //   // With CORS Proxy Service in use here\n  //   const authURL = this.utilitiesService.sendViaCORSProxy(centralIdUrl);\n\n  //   const postheaders: Headers = new Headers();\n  //   postheaders.append('Content-Type', 'application/json');\n  //   postheaders.append('Accept', 'application/json');\n  //   postheaders.append('Token', k5GlobalToken.headers.get('X-Access-Token'));\n\n  //   const postopts: RequestOptions = new RequestOptions();\n  //   postopts.headers = postheaders;\n\n  //   //console.log('call Update API ===>' + user.id + ' token : ' + user.globalToken);\n\n  //   return this.http.get(authURL, postopts)\n  //       .map(res => res.json())\n  //       .subscribe((data) => { //console.log('Get Response ' + data);\n\n  //                   },\n  //                   (err) => { //console.log('Get Error ' + err);\n\n  //                   });\n\n\n  // }\n\n  listUserfromCentralPortal(k5GlobalToken: any, user: any) {\n    let centralIdUrl = 'https://k5-apiportal.paas.cloud.global.fujitsu.com/API/v1/api/users?login_id=';\n    centralIdUrl = centralIdUrl.concat(user.name);\n            // With CORS Proxy Service in use here\n    const authURL = this.utilitiesService.sendViaCORSProxy(centralIdUrl);\n\n    const body = {'language_code': 'en'};\n\n    const bodyString = JSON.stringify(body); // Stringify payload\n\n    const postheaders: Headers = new Headers();\n    postheaders.append('Content-Type', 'application/json');\n    postheaders.append('Accept', 'application/json');\n    postheaders.append('Token', k5GlobalToken.headers.get('X-Access-Token'));\n\n    const postopts: RequestOptions = new RequestOptions();\n    postopts.headers = postheaders;\n\n    return this.http.put(authURL, bodyString, postopts)\n        .map((res: any) => {\n            //console.log('Response of User Update');\n            //console.log(res);\n            //console.log('User Queried on Central Portal' + JSON.stringify(res) );\n        });\n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/user-maintenance.service.ts","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class UtilityService {\n    private userk5CORSproxy = new BehaviorSubject<boolean>(true);\n    userK5CORS = this.userk5CORSproxy.asObservable();\n\n  constructor() {\n  }\n\n  changek5proxy(proxy: boolean) {\n    //console.log(this.userk5CORSproxy.getValue());\n    this.userk5CORSproxy.next(!proxy);\n    //console.log(this.userk5CORSproxy.getValue());\n  }\n\n    convertStringToArrayBufferView(str: string)\n    {\n        let bytes = new Uint8Array(str.length);\n        for (let iii = 0; iii < str.length; iii++) \n        {\n            bytes[iii] = str.charCodeAt(iii);\n        }\n\n        return bytes;\n    }\n\n    convertArrayBufferViewtoString(buffer: Uint8Array)\n    {\n        let str = \"\";\n        for (let iii = 0; iii < buffer.byteLength; iii++) \n        {\n            str += String.fromCharCode(buffer[iii]);\n        }\n\n        return str;\n    }\n\n    // Generate random password\n    generateRandomPassword(passwordLength: number) {\n            let text = '';\n            const possible = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n            for (let i = 0; i < passwordLength; i++) {\n                text += possible.charAt(Math.floor(Math.random() * possible.length));\n            }\n            return text;\n\n    }\n\n    getEndpoint(k5token: any, endpointType: string) {\n        // //console.log('Get Endpoint Token Details ' + JSON.stringify(k5token));\n        // //console.log('Get Endpoint ObjectType Details ' + endpointType);\n        for (const endpoint of (k5token.json().token.catalog)){\n            if (endpoint.endpoints.length > 0) {\n                if (endpointType === endpoint.endpoints[0].name) {\n                    // //console.log(endpoint.endpoints[0].url);\n                    return endpoint.endpoints[0].url;\n                }\n            }\n        }\n    }\n\n    getItemId(itemList: Response, itemName: string, itemType: string) {\n        let itemId = 'None';\n        for (let item in itemList.json()[itemType]) {\n            if (itemList.json()[itemType][item].name === itemName) {\n                // //console.log('\\n\\n\\n\\===== OBJECT  LIST ======\\n\\n\\n' + JSON.stringify(itemList.json()[itemType][item]));\n                itemId = itemList.json()[itemType][item].id;\n                break;\n            }\n        }\n\n        return itemId;\n\n    }\n\n    getItemName(itemList: Response, itemID: number) {\n        let itemName = 'None';\n        \n        for (let item in itemList.json()) {\n            if (itemList.json()[item].id === itemID) {\n                //console.log('\\n\\n\\n\\===== OBJECT  LIST ======\\n\\n\\n' + JSON.stringify(itemList.json()));\n                itemName = itemList.json()[item].name;\n                break;\n            }\n        }\n\n        return itemName;\n\n    }\n\n    sendViaCORSProxy(URL: string) {\n        // //console.log(URL);\n        if (this.userk5CORSproxy.getValue()) {\n            // CORS PROXY URL\n            //const corsProxy = 'http://localhost:2337/';https://corsproxy.uk-1.cf-app.net/\n            const corsProxy = 'https://corsproxy.uk-1.cf-app.net/'\n            // const corsProxy = 'https://hydra-t-apimng.uk-1.paas.cloud.global.fujitsu.com:10443/k5corsdemo/'\n            // remove the first 8 characters of the URL...https:// and add export\n            const protocol = URL.split(':', 1);\n            const port = (protocol[0] === 'https') ? 443 : 80;\n\n            // insert port number after host details\n            const pureURL = URL.substring((protocol[0].length + 3), URL.length);\n            // //console.log(pureURL);\n\n            const hostName = pureURL.split('/', 1);\n            const urlWithoutHost = pureURL.substring(hostName[0].length, pureURL.length);\n            // //console.log(urlWithoutHost);\n            const hostNamePort = hostName[0].concat(':', port.toString());\n\n            const proxyURL = corsProxy.concat(hostNamePort, urlWithoutHost);\n            // //console.log(proxyURL);\n            return proxyURL;\n        } else {\n            return URL;\n        }\n\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/services/utility.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/user-management.component.css\n// module id = ../../../../../src/app/user-management.component.css\n// module chunks = 1","module.exports = \"<p>\\n  user-management works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/user-management.component.html\n// module id = ../../../../../src/app/user-management.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/app/user-management.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /home/grazzer/Dev/Repositories/K5AdminPortal/src/main.ts"],"sourceRoot":"webpack:///"}